<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/9/2025 11:12:37 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-0H8B2SAT"
  DTS:CreatorName="LAPTOP-0H8B2SAT\Samuel Linares"
  DTS:DTSID="{FE518ADA-BFE3-4968-AECA-20AA4408CB7C}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="3082"
  DTS:ObjectName="LoadNorthwindDWH"
  DTS:PackageType="5"
  DTS:VersionBuild="68"
  DTS:VersionGUID="{E26B58DE-4F7C-4FEA-A623-BE5219D6D3AF}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost\SQLEXPRESS.DWHNorthwindOrders]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{10DECE7F-E1C1-4E5E-993D-97F865093D88}"
      DTS:ObjectName="localhost\SQLEXPRESS.DWHNorthwindOrders">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost\SQLEXPRESS;Initial Catalog=DWHNorthwindOrders;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-LoadNorthwindDWH-{10DECE7F-E1C1-4E5E-993D-97F865093D88}localhost\SQLEXPRESS.DWHNorthwindOrders;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost\SQLEXPRESS.Northwind]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D8D11DBA-29C4-411F-B35B-DBCC936C9136}"
      DTS:ObjectName="localhost\SQLEXPRESS.Northwind">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost\SQLEXPRESS;Initial Catalog=Northwind;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-LoadNorthwindDWH-{D8D11DBA-29C4-411F-B35B-DBCC936C9136}localhost\SQLEXPRESS.Northwind;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F08A33C-C9F3-445B-BA18-26BD34550C0C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Constring">
      <DTS:VariableValue
        DTS:DataType="8">Server=localhost\\SQLEXPRESS;Database=DWHNorthwindOrders;Trusted_Connection=true;TrustServerCertificate=true;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load Dim Category"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{098488c7-b49d-4d3b-b9fe-c7f147d55f7f}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Dim Category"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Dim Category\Get Category"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get Category"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Categories]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Dim Category\Get Category.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost\SQLEXPRESS.Northwind]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost\SQLEXPRESS.Northwind]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].Columns[CategoryID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                      lineageId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].Columns[CategoryID]"
                      name="CategoryID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].Columns[CategoryName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].ExternalColumns[CategoryName]"
                      length="15"
                      lineageId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].Columns[CategoryName]"
                      name="CategoryName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                      dataType="i4"
                      name="CategoryID" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].ExternalColumns[CategoryName]"
                      dataType="wstr"
                      length="15"
                      name="CategoryName" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].ExternalColumns[Description]"
                      dataType="nText"
                      name="Description" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].ExternalColumns[Picture]"
                      dataType="image"
                      name="Picture" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                      dataType="i4"
                      lineageId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                      name="CategoryID" />
                    <outputColumn
                      refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Error Output].Columns[CategoryName]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Error Output].Columns[CategoryName]"
                      name="CategoryName" />
                    <outputColumn
                      refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Dim Category\Load Category Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Category Data"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="42">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\OperationResult.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[namespace SC_8ebf501efa24482da599bb7cfae07708.Models
{
    public class OperationResult
    {
        public bool succedd { get; set; }
        public string Message { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Settings.get_Default():SC_8ebf501efa24482da599bb7cfae07708.Properties.Sett" +
    "ings")]

namespace SC_8ebf501efa24482da599bb7cfae07708.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_8ebf501efa24482da599bb7cfae07708</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_8ebf501efa24482da599bb7cfae07708</msb:DisplayName>
    <msb:ProjectId>{1F4BD073-8E88-4B05-AD83-353157E89F29}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_8ebf501efa24482da599bb7cfae07708.csproj" />
    <msb:File Include="DataServices\DataServiceCustomer.cs" />
    <msb:File Include="Models\CustomerModel.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="DataServices\IDataServiceCustomer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Models\OperationResult.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8ebf501efa24482da599bb7cfae07708")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8ebf501efa24482da599bb7cfae07708")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String Constring
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Constring"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8ebf501efa24482da599bb7cfae07708.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 CategoryID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool CategoryID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CategoryName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CategoryName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Threading.Tasks;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        LoadCategory(Row.CategoryID, Row.CategoryName).GetAwaiter();
    }

    public async Task LoadCategory(int categoryID, string categoryName)
    {
        try
        {
            using (SqlConnection connection = new SqlConnection("Server=localhost\\SQLEXPRESS;Database=DWHNorthwindOrders;Trusted_Connection=true;TrustServerCertificate=true;"))
            {
                using (SqlCommand command = new SqlCommand("DWH.LoadDimCategory", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    command.Parameters.AddWithValue("CategoryId", categoryID);
                    command.Parameters.AddWithValue("CategoryName", categoryName);

                    await connection.OpenAsync();
                    await command.ExecuteNonQueryAsync();
                }
            }
        }
        catch (Exception e)
        {
            MessageBox.Show(e.Message);
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[DataServices\DataServiceCustomer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using SC_8ebf501efa24482da599bb7cfae07708.Models;
using System;
using System.Collections.Generic;
using System.Data.Common;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.DataServices
{
    public class DataServiceCustomer : IDataServiceCustomer
    {
        private readonly string connectionString;
        public DataServiceCustomer()
        {
            connectionString = "Server=LAPTOP-0H8B2SAT\\SQLEXPRESS;Database=DWHNorthwind;Trusted_Connection=true;TrustServerCertificate=true";
        }
        public async Task<OperationResult> loadCustomer(CustomerModel customer)
        {
            OperationResult result = new OperationResult();
            try
            {

            }
            catch(Exception ex)
            {
                result.succedd = false;
                result.Message = $"error procesando los clientes {ex.Message}";
            }

            return result;
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\CustomerModel.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.Models
{
    public class CustomerModel
    {
        public int CustomerId { get; set; }
        public string CustomerName { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[DataServices\IDataServiceCustomer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using SC_8ebf501efa24482da599bb7cfae07708.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.DataServices
{
    public interface IDataServiceCustomer
    {
        Task<OperationResult> loadCustomer(CustomerModel customer);
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8ebf501efa24482da599bb7cfae07708.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A2CADD09-E07C-4DDA-BE97-03D4AF5ACD02}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8ebf501efa24482da599bb7cfae07708</RootNamespace>
    <AssemblyName>SC_8ebf501efa24482da599bb7cfae07708</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="DataServices\DataServiceCustomer.cs" />
    <Compile Include="DataServices\IDataServiceCustomer.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Models\CustomerModel.cs" />
    <Compile Include="Models\OperationResult.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8ebf501efa24482da599bb7cfae07708.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
CwIf/n0VAAAEAnwWAAAEByhEAAAK3hQCH/59FQAABAJ8FgAABAYoRQAACioBEAAAAAAAAAgIABcW
AAABNgJ8FgAABAMoRgAACioAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAACAK
AAAjfgAAjAoAAIwLAAAjU3RyaW5ncwAAAAAYFgAApAIAACNVUwC8GAAAEAAAACNHVUlEAAAAzBgA
AGADAAAjQmxvYgAAAAAAAAACAAABVxeiCwkLAAAA+gEzABYAAAEAAAA4AAAADgAAABYAAAArAAAA
FwAAAAMAAABGAAAAIgAAAAQAAAAGAAAADAAAABEAAAAEAAAAAwAAAAEAAAAHAAAAAQAAAAIAAAAE
AAAAAAAMBgEAAAAAAAYAwASYCAYAVAWYCAYA2QNUCA8ADAkAAAYABgSzBgYAowSzBgYAhASzBgYA
OwWzBgYA4ASzBgYA+QSzBgYAOASzBgYAUwScBQoAFAX3AgYALQNrBgYAHQSYCAYA4wWOCQYAoQOY
CAYAKANrBgYAxwKYCAYAMAiYCAYAYQCYCAYA+gZrBgYAbweYCA4A6QZXCg4AGgJXCgYAbARUCAoA
rwf3AhIAoAf3AgoANAf3AgoAiwr3AgYABwprBgYAvANUCAYAwAe4CAYAKAeeBhYAgQP2BRYA7QP2
BRYAWgOJBgYAQQCOCQYASACYCAYAygVrBgYAFwdrBhoAEQD7BxoAAQD7B3sAEAsAABoAIgD7BwYA
WQJrBgYAcwuzBg4AEAIEBw4AHAMTAQ4AxQZXCgYAcgBrBg4AIwhXCg4A3AYEBwYATQJrBh4AZAvX
CR4AJgrXCQAAAADoAAAAAAABAAEAAQAQAH4GAAAQAAEAAQABABAAkwcAAG0AAQAGAAEAEABtCgAA
eQABAA0AAQAQAOwJAAB9AAMAEQABABAAVgkAAH0ABAASAAAAEAC/CBsJfQAFABQAAAEQAIUJGwmV
AAcAGAABABAA6AWsCX0ACAAbAAEAEAAzCqwJfQAKACAAAQAQAN4HZwh9AAwAJQChABAA3QdnCAAA
DQAnAAMBEACxAAAASQANACgAAwEQAIkAAABJABUAKgAGAOwJawEGAFYJbwEBAHsKcwEBAHsKcwER
AHIGdwERAEoDfAERACUCgQEBAKQBhQEBAPIBiAEBAMABiwEBANkBiAEhALYFiAEGAJYDhQEGAIYH
jgEGAAgBhQEGALoCiAEBAHgAkgEBAKMAlgEBADoAmgEBAJwAngEGAJYDhQEGAIYHpQFQIAAAAADG
AHIFBgABAFggAAAAAMYAfQUGAAEAYCAAAAAAxgBAC64BAQB8IAAAAACGAHwLtAECAMcgAAAAAIYY
RwgGAAQAzyAAAAAAhhhHCEkABADaIAAAAACGCPkAuwEHAO8gAAAAAIYINAZqAAcA+CAAAAAAhgip
AjsBBwANIQAAAACGCEoGagAHABYhAAAAAIYAVwtqAAcAHiEAAAAAhgAOCmoABwAmIQAAAACGGEcI
BgAHAEYhAAAAAMYA5gq/AQcAayEAAAAAxgHfCq4BCwB+IQAAAADGAUALrgEMAIAhAAAAAIYYRwjJ
AQ0AjyEAAAAAhhhHCMkBDgCeIQAAAACGCNEFOwEPAMQhAAAAAIMYRwgGAA8AzCEAAAAAkwi8B88B
DwD4IQAAAACTCDID1QEPAP8hAAAAAJMIPgPbAQ8AByIAAAAAlggaCuIBEAAOIgAAAACGGEcIBgAQ
ABYiAAAAAJEYTQjnARAAIiIAAAAAhghHAbsBEAAqIgAAAACGCFYBAQAQADMiAAAAAIYIfQI7AREA
OyIAAAAAhgiOAhAAEQDEIQAAAACGGEcIBgASAEQiAAAAAIYIZQFqABIATCIAAAAAhghxAesBEgBV
IgAAAACGCDUCOwETAF0iAAAAAIYIQQIQABMAxCEAAAAAhhhHCAYAFABmIgAAAACGGEcIBgAUAHwi
AAAAAOYB0AfwARQAAAAAAAAAxgXQB/ABFQC4IgAAAADhAfMKBgAWAPwkAAAAAOEB2gIbABYADCUA
AAAA4QHzCgYAFwBcJQAAAADhAdoCGwAXAAAAAQBbCwAAAQAIAQAAAgC6AgAAAQC1BwAAAgBgCQAA
AwBCBwAAAQDxAAAAAgCfAgAAAwC1BwAABABCBwAAAQC1BwAAAQBbCwAAAQCRCgAAAQCRCgAAAQCW
BQAAAQCWBQAAAQCWBQAAAQCWBQAAAQCWBQAAAQDyBwAAAQDyBwAAAQDqAgAAAQDqAgsAMAANAE0A
DgBNAAkARwgBABEARwgGABkARwgKACkARwgQADEARwgQADkARwgQAEEARwgQAEkARwgQAFEARwgQ
AFkARwgQAGEARwgQAGkARwgGAHkARwgVAIkARwgGAJkA8woGAJkA2gIbANEARwgGAAEBRwgGACEB
RwghAPEAcgUGAPEAfQUGAIEAPAgoALkAegMyALkAuAo3ALkA3wVEANkARwhJANkAtQdTANkAYAlX
AOEAbwBbANkAWwZgAOEAxwVlANkAVwtqANkADgpqAPEARwgGAEEBpQluAPEAdAl2APkARwgGAPEA
Sgl8AFEBYgaCAPEAKwuJAFkB/AqPAHEAawKWAHEAbwueAAkBRwikACkBRwgGAAwAegO5AAwAuAo3
AAwA3wXIAMEARwgQAMkARwjfAIEBGAPmAMkA+AntAJEBiQXzAKkBKAFEAKEAlAFqALkAfQH7AKEA
QwoGAIEBMgENARQAPAgdARwAlAFqABwAQwo2AbEBcgMGALEANQI7AbkBXws/AbkA9wZGAbkATQoG
ALkA2gIbAAwA9wZGAQwATQpTAQwA2gIbAC4ACwAZAi4AEwAiAi4AGwBBAi4AIwBKAi4AKwBzAi4A
MwBzAi4AOwBzAi4AQwBKAi4ASwB5Ai4AUwBzAi4AWwCQAkMAYwD9AoAAawDaAskAmwBBAuEAcwD9
AuMAkwD9AukAmwBBAgEBcwD9AiEBcwD9AkEBcwD9AmEBcwD9AqMBcwD9AsMBcwD9AmADcwD9AoAD
cwD9AqADcwD9AsADcwD9AgAEcwD9AiAEcwD9AkAEcwD9AmAEcwD9AsAEawACAyAFiwD9AmAFiwD9
Ai0ArADSAEwBAwABAAYABQAHAAYACAAIAAkACQAKAAsAAAD9APwBAAA4BgACAACtAgQCAABOBgAC
AADVBQQCAADABwgCAABSAw4CAAAeChQCAABaAfwBAACSAgQCAAB1AQACAABFAgQCAgAHAAMAAgAI
AAUAAgAJAAcAAgAKAAkAAgATAAsAAgAVAA0AAgAWAA8AAQAXAA8AAgAYABEAAgAbABMAAQAcABMA
AgAdABUAAQAeABUAAgAgABcAAQAhABcAAgAiABkAAQAjABkADQBQAB8ADQBSACEADgBUAB8ADgBW
ACEAsQAWASYBBIAAAAEAAAAAAAAAAAAAAAAAxAAAAAQAAAAAAAAAAAAAAFkBHwEAAAAAEAAAAAAA
AAAAAAAAYgGbCgAAAAAEAAAAAAAAAAAAAABZARMBAAAAABAAAAAAAAAAAAAAAGIBvgoAAAAABAAA
AAAAAAAAAAAAWQFrBgAAAAAQAAAAAAAAAAAAAABiAUwHAAAAAAQAAAAAAAAAAAAAAFkB1wkAAAAA
AAAAAAEAAADJCAAADQACAA4ACwAxAD8AXwDDAHEABgFxACwBAAAAAABJRFRTVmFyaWFibGUxMDAA
SURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMAA8PnVfXzEAVGFza2AxAEFz
eW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAEdldEludDMyADxjb25uZWN0aW9u
PjVfXzIAPGxvYWRDdXN0b21lcj5kX18yADw+dV9fMgA8Y29tbWFuZD41X18zADxMb2FkQ2F0ZWdv
cnk+ZF9fMwBTQ184ZWJmNTAxZWZhMjQ0ODJkYTU5OWJiN2NmYWUwNzcwOAA8TW9kdWxlPgBJbnB1
dElEAGdldF9DYXRlZ29yeUlEAGNhdGVnb3J5SUQAU3lzdGVtLkRhdGEAbXNjb3JsaWIAT3BlbkFz
eW5jAEV4ZWN1dGVOb25RdWVyeUFzeW5jAGdldF9DdXN0b21lcklkAHNldF9DdXN0b21lcklkAGdl
dF9zdWNjZWRkAHNldF9zdWNjZWRkAEF3YWl0VW5zYWZlT25Db21wbGV0ZWQAZ2V0X0lzQ29tcGxl
dGVkADxDdXN0b21lcklkPmtfX0JhY2tpbmdGaWVsZAA8c3VjY2VkZD5rX19CYWNraW5nRmllbGQA
PE1lc3NhZ2U+a19fQmFja2luZ0ZpZWxkADxDdXN0b21lck5hbWU+a19fQmFja2luZ0ZpZWxkAERi
Q29tbWFuZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBzZXRfTWVzc2Fn
ZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfQ3Vz
dG9tZXJOYW1lAHNldF9DdXN0b21lck5hbWUASW5wdXROYW1lAGdldF9DYXRlZ29yeU5hbWUAY2F0
ZWdvcnlOYW1lAElBc3luY1N0YXRlTWFjaGluZQBTZXRTdGF0ZU1hY2hpbmUAc3RhdGVNYWNoaW5l
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAHNldF9Db21tYW5kVHlwZQBWYWx1ZVR5
cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAERpc3Bvc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlADw+MV9fc3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzeW5jU3RhdGVNYWNoaW5lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBB
c3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2lu
dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBjb25uZWN0aW9uU3RyaW5nAEdldFN0cmluZwBnZXRfQ29uc3Ry
aW5nAGdldF9UYXNrAEN1c3RvbWVyTW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzhlYmY1
MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3NzA4LmRsbABnZXRfQ2F0ZWdvcnlJRF9Jc051bGwAZ2V0
X0NhdGVnb3J5TmFtZV9Jc051bGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1h
aW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxl
Y3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBT
ZXRFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1l
V3JhcABBc3luY1Rhc2tNZXRob2RCdWlsZGVyADw+dF9fYnVpbGRlcgBJbnB1dDBCdWZmZXIAUGlw
ZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAbG9hZEN1c3RvbWVy
AElEYXRhU2VydmljZUN1c3RvbWVyAGN1c3RvbWVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUuV3JhcHBlcgBTcWxQYXJhbWV0ZXIAVGFza0F3YWl0ZXIAR2V0QXdhaXRlcgAuY3RvcgAu
Y2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFNDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3
NzA4LkRhdGFTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDguUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5
YmI3Y2ZhZTA3NzA4LlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVt
bkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tz
AEVxdWFscwBTQ184ZWJmNTAxZWZhMjQ0ODJkYTU5OWJiN2NmYWUwNzcwOC5Nb2RlbHMAU3lzdGVt
LldpbmRvd3MuRm9ybXMAQ29ubmVjdGlvbnMAZ2V0X1BhcmFtZXRlcnMAT2JqZWN0AEVuZE9mUm93
c2V0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABPcGVyYXRpb25SZXN1bHQAR2V0UmVzdWx0AFNl
dFJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25l
bnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAU3RhcnQATWlj
cm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABNb3ZlTmV4
dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFs
dWF0b3JDb250ZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBTaG93AE1lc3NhZ2VC
b3gAZ2V0X0Fzc2VtYmx5AExvYWRDYXRlZ29yeQAAAAAAD0kAbgBwAHUAdAAgADAAABNDAG8AbgBz
AHQAcgBpAG4AZwAAcVMAQwBfADgAZQBiAGYANQAwADEAZQBmAGEAMgA0ADQAOAAyAGQAYQA1ADkA
OQBiAGIANwBjAGYAYQBlADAANwA3ADAAOAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAgNdTAGUAcgB2AGUAcgA9AEwAQQBQAFQATwBQAC0AMABIADgAQgAyAFMAQQBU
AFwAUwBRAEwARQBYAFAAUgBFAFMAUwA7AEQAYQB0AGEAYgBhAHMAZQA9AEQAVwBIAE4AbwByAHQA
aAB3AGkAbgBkADsAVAByAHUAcwB0AGUAZABfAEMAbwBuAG4AZQBjAHQAaQBvAG4APQB0AHIAdQBl
ADsAVAByAHUAcwB0AFMAZQByAHYAZQByAEMAZQByAHQAaQBmAGkAYwBhAHQAZQA9AHQAcgB1AGUA
AYDZUwBlAHIAdgBlAHIAPQBsAG8AYwBhAGwAaABvAHMAdABcAFMAUQBMAEUAWABQAFIARQBTAFMA
OwBEAGEAdABhAGIAYQBzAGUAPQBEAFcASABOAG8AcgB0AGgAdwBpAG4AZABPAHIAZABlAHIAcwA7
AFQAcgB1AHMAdABlAGQAXwBDAG8AbgBuAGUAYwB0AGkAbwBuAD0AdAByAHUAZQA7AFQAcgB1AHMA
dABTAGUAcgB2AGUAcgBDAGUAcgB0AGkAZgBpAGMAYQB0AGUAPQB0AHIAdQBlADsAACdEAFcASAAu
AEwAbwBhAGQARABpAG0AQwBhAHQAZQBnAG8AcgB5AAAVQwBhAHQAZQBnAG8AcgB5AEkAZAAAGUMA
YQB0AGUAZwBvAHIAeQBOAGEAbQBlAAAAqKo4O7YtqE+HQhs2f4vCLgAEIAEBCAMgAAEFIAEBEREE
IAEBDgUgAQESOQUgAQESTQYgAQERgI0EIAARUQQHARE0BAAAEV0HMAEBARAeAAQKARE0BCAAEkEJ
IAMBEnEdCBJ1AwYScQMGHQgEIAEICAQgAQIIBCABDggDIAACByACAg4RgKUFIAEdCAgFIAASgKkG
IAESgK0cBQAAEoCxBiABHBKAtQcAARI5EYC5BSAAEoC9ByACAQ4SgL0EBwEROAcVEYCdARIoCQAA
FRGAnQETAAQKARE4CSAAFRKAmQETAAwHBAgRURURVQEIElkGIAIBDhJhBiABARGAxQUgABKAyQcg
AhKA0Q4cCjACAgEQHgAQHgEGCgIRURE0CCAAFRKAmQEIBhUSgJkBCAggABURVQETAAUVEVUBCAkK
AhURVQEIETQEIAATAAMgAA4GAAERgOEOBSABARJZBgcCEigSWQUgAQETAAi3elxWGTTgiQiJhF3N
gIDMkQMGEhQDBhIYAwYSeQQGEoCFBAYSgIkDBhIgAgYIAgYOAgYCAwYRXQMGEmEDBhJlAwYRUQYG
FRFVAQgIBhURgJ0BEigFIAEBEgwGIAISQQgOAyAACAkgBAEIDhJxEnUFIAEBEnkFAAASgIUFAAAS
gIkGAAEBEoCJBAAAEiADAAABBCABAQILIAEVEoCZARIoEiQDKAAIAygAAgMoAA4FCAASgIUFCAAS
gIkECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAo
AQAjU0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDgAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjciAQAdU2NyaXB0TWFpbis8TG9hZENhdGVnb3J5
PmRfXzMAAAQBAAAAXAEAV1NDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3NzA4LkRhdGFT
ZXJ2aWNlcy5EYXRhU2VydmljZUN1c3RvbWVyKzxsb2FkQ3VzdG9tZXI+ZF9fMgAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAAB4QgAAAAAAAAAAAACSQgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhEIAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
OABlAGIAZgA1ADAAMQBlAGYAYQAyADQANAA4ADIAZABhADUAOQA5AGIAYgA3AGMAZgBhAGUAMAA3
ADcAMAA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA4AGUAYgBmADUAMAAxAGUAZgBh
ADIANAA0ADgAMgBkAGEANQA5ADkAYgBiADcAYwBmAGEAZQAwADcANwAwADgALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADgAZQBiAGYANQAw
ADEAZQBmAGEAMgA0ADQAOAAyAGQAYQA1ADkAOQBiAGIANwBjAGYAYQBlADAANwA3ADAAOAAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA4AGUAYgBmADUAMAAx
AGUAZgBhADIANAA0ADgAMgBkAGEANQA5ADkAYgBiADcAYwBmAGEAZQAwADcANwAwADgAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAKQyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8ebf501efa24482da599bb7cfae07708</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::Constring</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">47</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Dim Category\Load Category Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Dim Category\Load Category Data.Inputs[Input 0].Columns[CategoryID]"
                      cachedDataType="i4"
                      cachedName="CategoryID"
                      lineageId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].Columns[CategoryID]" />
                    <inputColumn
                      refId="Package\Load Dim Category\Load Category Data.Inputs[Input 0].Columns[CategoryName]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="CategoryName"
                      lineageId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output].Columns[CategoryName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Dim Category\Load Category Data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load Dim Category\Load Category Data.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Dim Category.Paths[OLE DB Source Output]"
              endId="Package\Load Dim Category\Load Category Data.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Load Dim Category\Get Category.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Dim Customers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{88B9FEC3-7C8E-459D-97A1-E58F5A384E09}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Dim Customers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Dim Customers\Get Customers"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get Customers"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Customers]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Dim Customers\Get Customers.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost\SQLEXPRESS.Northwind]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost\SQLEXPRESS.Northwind]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[CustomerID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                      length="5"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[CustomerID]"
                      name="CustomerID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[CompanyName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[CompanyName]"
                      length="40"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[CompanyName]"
                      name="CompanyName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[City]"
                      length="15"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[Country]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[Country]"
                      length="15"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[Country]"
                      name="Country"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                      dataType="wstr"
                      length="5"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[CompanyName]"
                      dataType="wstr"
                      length="40"
                      name="CompanyName" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[ContactName]"
                      dataType="wstr"
                      length="30"
                      name="ContactName" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[ContactTitle]"
                      dataType="wstr"
                      length="30"
                      name="ContactTitle" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[Address]"
                      dataType="wstr"
                      length="60"
                      name="Address" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[City]"
                      dataType="wstr"
                      length="15"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[Region]"
                      dataType="wstr"
                      length="15"
                      name="Region" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[PostalCode]"
                      dataType="wstr"
                      length="10"
                      name="PostalCode" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[Country]"
                      dataType="wstr"
                      length="15"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[Phone]"
                      dataType="wstr"
                      length="24"
                      name="Phone" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].ExternalColumns[Fax]"
                      dataType="wstr"
                      length="24"
                      name="Fax" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                      dataType="wstr"
                      length="5"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                      name="CustomerID" />
                    <outputColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[CompanyName]"
                      dataType="wstr"
                      length="40"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[CompanyName]"
                      name="CompanyName" />
                    <outputColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[City]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[Country]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[Country]"
                      name="Country" />
                    <outputColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Dim Customers\Load Customers Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Customers Data"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="42">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\OperationResult.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[namespace SC_8ebf501efa24482da599bb7cfae07708.Models
{
    public class OperationResult
    {
        public bool succedd { get; set; }
        public string Message { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Settings.get_Default():SC_8ebf501efa24482da599bb7cfae07708.Properties.Sett" +
    "ings")]

namespace SC_8ebf501efa24482da599bb7cfae07708.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_8ebf501efa24482da599bb7cfae07708</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_8ebf501efa24482da599bb7cfae07708</msb:DisplayName>
    <msb:ProjectId>{F5F6069F-B89E-4C55-95CA-D664150F0E49}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_8ebf501efa24482da599bb7cfae07708.csproj" />
    <msb:File Include="DataServices\DataServiceCustomer.cs" />
    <msb:File Include="Models\CustomerModel.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="DataServices\IDataServiceCustomer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Models\OperationResult.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:Breakpoint Include="bbe332ed3fcb4c8ca4fa1366d5964a04">
      <msb:FileName>main.cs</msb:FileName>
      <msb:ColumnNumber>20</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>127</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8ebf501efa24482da599bb7cfae07708")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8ebf501efa24482da599bb7cfae07708")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String Constring
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Constring"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8ebf501efa24482da599bb7cfae07708.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String CustomerID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool CustomerID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CompanyName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CompanyName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String City
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool City_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Country
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Country_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Threading.Tasks;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        LoadCustomers(Row.CustomerID, Row.CompanyName, Row.City, Row.Country).GetAwaiter();
    }

    public async Task LoadCustomers(string customerID, string companyName, string city,string country)
    {
        try
        {
            using (SqlConnection connection = new SqlConnection("Server=localhost\\SQLEXPRESS;Database=DWHNorthwindOrders;Trusted_Connection=true;TrustServerCertificate=true;"))
            {

                using (SqlCommand command = new SqlCommand("DWH.LoadDimCustomer", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    command.Parameters.AddWithValue("CustomerID", customerID);
                    command.Parameters.AddWithValue("CompanyName", companyName);
                    command.Parameters.AddWithValue("City", city);
                    command.Parameters.AddWithValue("Country", country);

                    await connection.OpenAsync();
                    await command.ExecuteNonQueryAsync();
                }
            }
        }
        catch (Exception e)
        {
            MessageBox.Show(e.Message);
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[DataServices\DataServiceCustomer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using SC_8ebf501efa24482da599bb7cfae07708.Models;
using System;
using System.Collections.Generic;
using System.Data.Common;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.DataServices
{
    public class DataServiceCustomer : IDataServiceCustomer
    {
        private readonly string connectionString;
        public DataServiceCustomer()
        {
            connectionString = "Server=LAPTOP-0H8B2SAT\\SQLEXPRESS;Database=DWHNorthwind;Trusted_Connection=true;TrustServerCertificate=true";
        }
        public async Task<OperationResult> loadCustomer(CustomerModel customer)
        {
            OperationResult result = new OperationResult();
            try
            {

            }
            catch(Exception ex)
            {
                result.succedd = false;
                result.Message = $"error procesando los clientes {ex.Message}";
            }

            return result;
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\CustomerModel.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.Models
{
    public class CustomerModel
    {
        public int CustomerId { get; set; }
        public string CustomerName { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[DataServices\IDataServiceCustomer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using SC_8ebf501efa24482da599bb7cfae07708.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.DataServices
{
    public interface IDataServiceCustomer
    {
        Task<OperationResult> loadCustomer(CustomerModel customer);
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8ebf501efa24482da599bb7cfae07708.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A2CADD09-E07C-4DDA-BE97-03D4AF5ACD02}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8ebf501efa24482da599bb7cfae07708</RootNamespace>
    <AssemblyName>SC_8ebf501efa24482da599bb7cfae07708</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="DataServices\DataServiceCustomer.cs" />
    <Compile Include="DataServices\IDataServiceCustomer.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Models\CustomerModel.cs" />
    <Compile Include="Models\OperationResult.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8ebf501efa24482da599bb7cfae07708.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AwDNBwAABABaBwAAAQDNBwAAAQCBCwAAAQC3CgAAAQC3CgAAAQCMBQAAAQCMBQAAAQCMBQAAAQCM
BQAAAQCMBQAAAQAKCAAAAQAKCAAAAQDgAgAAAQDgAgsAMAANAE0ADgBNAAkAXwgBABEAXwgGABkA
XwgKACkAXwgQADEAXwgQADkAXwgQAEEAXwgQAEkAXwgQAFEAXwgQAFkAXwgQAGEAXwgQAGkAXwgG
AHkAXwgVAIkAXwgGAJkAGQsGAJkA0AIbANEAXwgGAAEBXwgGACEBXwghAPEAaAUGAPEAcwUGAIEA
VAgoALkAcAMyALkA3go3ALkA1QVEANkAXwhJANkAzQdTANkAeAlXAOEAvQVbANkAcwZgANkAfQtl
ANkANAplAPEAXwgGAEEBvQlpAPEAjAlxAPkAXwgGAPEAYgl3AFEBegZ9APEAUQuEAFkBIguKAHEA
YwKRAHEAlQuZAAkBXwifACkBXwgGAAwAcAO0AAwA3go3AAwA1QXDAMEAXwgQAMkAXwjaAIEBDgPh
AMkAHgroAJEBfwXuAKEBIAFEAKEAjAFlALkAdQH2AKEAaQoGAIEBKgEIARQAVAgYARwAjAFlABwA
aQoxAakBaAMGALEALQI2AbEBhQs6AbkADwdBAbkAcwoGALkA0AIbAAwADwdBAQwAcwpOAQwA0AIb
AC4ACwAWAi4AEwAfAi4AGwA+Ai4AIwBHAi4AKwBwAi4AMwBwAi4AOwBwAi4AQwBHAi4ASwB2Ai4A
UwBwAi4AWwCNAkMAYwD7AoAAawDXAuEAcwD7AuMAkwD7AgEBcwD7AiEBcwD7AkEBcwD7AkkBmwA+
AmEBcwD7AmkBmwA+AqMBcwD7AsMBcwD7AuADcwD7AgAEcwD7AiAEcwD7AkAEcwD7AoAEcwD7AqAE
cwD7AsAEcwD7AuAEcwD7AkAFawAAA6AFiwD7AuAFiwD7Ai0ApwDNAEcBAwABAAYACQAHAAoACAAM
AAkADQAKAA8AAADtAPkBAAAuBv0BAAClAvkBAABEBv0BAAC6C/kBAABuBv0BAACmC/kBAABbBv0B
AADLBfkBAADYBwECAABIAwcCAABECg0CAABSARICAACKAvkBAABtAf0BAAA9AvkBAgAHAAMAAgAI
AAUAAgAJAAcAAgAKAAkAAgALAAsAAgAMAA0AAgANAA8AAgAOABEAAgAXABMAAgAZABUAAgAaABcA
AQAbABcAAgAcABkAAgAfABsAAQAgABsAAgAhAB0AAQAiAB0AAgAkAB8AAQAlAB8AAgAmACEAAQAn
ACEADQBYAB8ADQBaACEADgBcAB8ADgBeACEArAARASEBBIAAAAEAAAAAAAAAAAAAAAAAvAAAAAQA
AAAAAAAAAAAAAFQBFwEAAAAAEAAAAAAAAAAAAAAAXQHBCgAAAAAEAAAAAAAAAAAAAABUAQsBAAAA
ABAAAAAAAAAAAAAAAF0B5AoAAAAABAAAAAAAAAAAAAAAVAGDBgAAAAAQAAAAAAAAAAAAAABdAWQH
AAAAAAQAAAAAAAAAAAAAAFQB7wkAAAAAAAAAAAEAAADhCAAADQACAA4ACwAxAD8AXQC+AG8AAQFv
ACcBAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29u
dGV4dDEwMAA8PnVfXzEAVGFza2AxAEFzeW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRl
cmAxADxjb25uZWN0aW9uPjVfXzIAPGxvYWRDdXN0b21lcj5kX18yADw+dV9fMgA8Y29tbWFuZD41
X18zADxMb2FkQ3VzdG9tZXJzPmRfXzMAU0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3
MDgAPE1vZHVsZT4AZ2V0X0N1c3RvbWVySUQAY3VzdG9tZXJJRABJbnB1dElEAFN5c3RlbS5EYXRh
AG1zY29ybGliAE9wZW5Bc3luYwBFeGVjdXRlTm9uUXVlcnlBc3luYwBnZXRfQ3VzdG9tZXJJZABz
ZXRfQ3VzdG9tZXJJZABnZXRfc3VjY2VkZABzZXRfc3VjY2VkZABBd2FpdFVuc2FmZU9uQ29tcGxl
dGVkAGdldF9Jc0NvbXBsZXRlZAA8Q3VzdG9tZXJJZD5rX19CYWNraW5nRmllbGQAPHN1Y2NlZGQ+
a19fQmFja2luZ0ZpZWxkADxNZXNzYWdlPmtfX0JhY2tpbmdGaWVsZAA8Q3VzdG9tZXJOYW1lPmtf
X0JhY2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29tbWFuZABkZWZhdWx0SW5zdGFuY2UAZ2V0X01l
c3NhZ2UAc2V0X01lc3NhZ2UASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZy
b21IYW5kbGUAZ2V0X0N1c3RvbWVyTmFtZQBzZXRfQ3VzdG9tZXJOYW1lAElucHV0TmFtZQBnZXRf
Q29tcGFueU5hbWUAY29tcGFueU5hbWUASUFzeW5jU3RhdGVNYWNoaW5lAFNldFN0YXRlTWFjaGlu
ZQBzdGF0ZU1hY2hpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAc2V0X0NvbW1h
bmRUeXBlAFZhbHVlVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAPD4xX19zdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXN5bmNTdGF0ZU1hY2hpbmVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlk
ZGVuQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAEFkZFdpdGhWYWx1
ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAGNvbm5lY3Rpb25TdHJpbmcAR2V0U3Ry
aW5nAGdldF9Db25zdHJpbmcAZ2V0X1Rhc2sAQ3VzdG9tZXJNb2RlbABTeXN0ZW0uQ29tcG9uZW50
TW9kZWwAU0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDguZGxsAGdldF9DdXN0b21l
cklEX0lzTnVsbABnZXRfQ29tcGFueU5hbWVfSXNOdWxsAGdldF9Db3VudHJ5X0lzTnVsbABnZXRf
Q2l0eV9Jc051bGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3Fs
UGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBTZXRFeGNlcHRp
b24AU3lzdGVtLkRhdGEuQ29tbW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0
TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABBc3lu
Y1Rhc2tNZXRob2RCdWlsZGVyADw+dF9fYnVpbGRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAbG9hZEN1c3RvbWVyAElEYXRhU2Vy
dmljZUN1c3RvbWVyAGN1c3RvbWVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3Jh
cHBlcgBTcWxQYXJhbWV0ZXIAVGFza0F3YWl0ZXIAR2V0QXdhaXRlcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFNDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3NzA4LkRhdGFT
ZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
U0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDguUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3
NzA4LlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMA
R2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzAEVxdWFscwBT
Q184ZWJmNTAxZWZhMjQ0ODJkYTU5OWJiN2NmYWUwNzcwOC5Nb2RlbHMAU3lzdGVtLldpbmRvd3Mu
Rm9ybXMAQ29ubmVjdGlvbnMATG9hZEN1c3RvbWVycwBnZXRfUGFyYW1ldGVycwBPYmplY3QARW5k
T2ZSb3dzZXQAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AE9wZXJhdGlvblJlc3VsdABHZXRSZXN1
bHQAU2V0UmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENv
bXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABTdGFy
dABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AE1v
dmVOZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0
X0V2YWx1YXRvckNvbnRleHQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AFNob3cATWVz
c2FnZUJveABnZXRfQXNzZW1ibHkAZ2V0X0NvdW50cnkAY291bnRyeQBnZXRfQ2l0eQBjaXR5AAAP
SQBuAHAAdQB0ACAAMAAAE0MAbwBuAHMAdAByAGkAbgBnAABxUwBDAF8AOABlAGIAZgA1ADAAMQBl
AGYAYQAyADQANAA4ADIAZABhADUAOQA5AGIAYgA3AGMAZgBhAGUAMAA3ADcAMAA4AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAACA11MAZQByAHYAZQByAD0ATABBAFAA
VABPAFAALQAwAEgAOABCADIAUwBBAFQAXABTAFEATABFAFgAUABSAEUAUwBTADsARABhAHQAYQBi
AGEAcwBlAD0ARABXAEgATgBvAHIAdABoAHcAaQBuAGQAOwBUAHIAdQBzAHQAZQBkAF8AQwBvAG4A
bgBlAGMAdABpAG8AbgA9AHQAcgB1AGUAOwBUAHIAdQBzAHQAUwBlAHIAdgBlAHIAQwBlAHIAdABp
AGYAaQBjAGEAdABlAD0AdAByAHUAZQABgNlTAGUAcgB2AGUAcgA9AGwAbwBjAGEAbABoAG8AcwB0
AFwAUwBRAEwARQBYAFAAUgBFAFMAUwA7AEQAYQB0AGEAYgBhAHMAZQA9AEQAVwBIAE4AbwByAHQA
aAB3AGkAbgBkAE8AcgBkAGUAcgBzADsAVAByAHUAcwB0AGUAZABfAEMAbwBuAG4AZQBjAHQAaQBv
AG4APQB0AHIAdQBlADsAVAByAHUAcwB0AFMAZQByAHYAZQByAEMAZQByAHQAaQBmAGkAYwBhAHQA
ZQA9AHQAcgB1AGUAOwAAJ0QAVwBIAC4ATABvAGEAZABEAGkAbQBDAHUAcwB0AG8AbQBlAHIAABVD
AHUAcwB0AG8AbQBlAHIASQBEAAAXQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAJQwBpAHQAeQAAD0MA
bwB1AG4AdAByAHkAAABTliVIIvGQQ46qe3pzCgXTAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARI5
BSABARJNBiABARGAjQQgABFRBAcBETQEAAARXQcwAQEBEB4ABAoBETQEIAASQQkgAwEScR0IEnUD
BhJxAwYdCAQgAQ4IBCABAggDIAACByACAg4RgKUFIAEdCAgFIAASgKkGIAESgK0cBQAAEoCxBiAB
HBKAtQcAARI5EYC5BSAAEoC9ByACAQ4SgL0EBwEROAcVEYCdARIoCQAAFRGAnQETAAQKARE4CSAA
FRKAmQETAAwHBAgRURURVQEIElkGIAIBDhJhBiABARGAxQUgABKAyQcgAhKAzQ4cCjACAgEQHgAQ
HgEGCgIRURE0CCAAFRKAmQEIBhUSgJkBCAggABURVQETAAUVEVUBCAkKAhURVQEIETQEIAATAAMg
AA4GAAERgN0OBSABARJZBgcCEigSWQUgAQETAAi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYS
eQQGEoCFBAYSgIkDBhIgAgYIAgYOAgYCAwYRXQMGEmEDBhJlAwYRUQYGFRFVAQgIBhURgJ0BEigF
IAEBEgwIIAQSQQ4ODg4JIAQBCA4ScRJ1BSABARJ5BQAAEoCFBQAAEoCJBgABARKAiQQAABIgAwAA
AQMgAAgEIAEBAgsgARUSgJkBEigSJAMoAA4DKAACBQgAEoCFBQgAEoCJBAgAEiADKAAICAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ184ZWJmNTAx
ZWZhMjQ0ODJkYTU5OWJiN2NmYWUwNzcwOAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI1AABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNyMBAB5TY3JpcHRNYWluKzxMb2FkQ3VzdG9tZXJzPmRfXzMAAAQBAAAA
XAEAV1NDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3NzA4LkRhdGFTZXJ2aWNlcy5EYXRh
U2VydmljZUN1c3RvbWVyKzxsb2FkQ3VzdG9tZXI+ZF9fMgAAAAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMRDAAAA
AAAAAAAAAN5DAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQQwAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
OABlAGIAZgA1ADAAMQBlAGYAYQAyADQANAA4ADIAZABhADUAOQA5AGIAYgA3AGMAZgBhAGUAMAA3
ADcAMAA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA4AGUAYgBmADUAMAAxAGUAZgBh
ADIANAA0ADgAMgBkAGEANQA5ADkAYgBiADcAYwBmAGEAZQAwADcANwAwADgALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADgAZQBiAGYANQAw
ADEAZQBmAGEAMgA0ADQAOAAyAGQAYQA1ADkAOQBiAGIANwBjAGYAYQBlADAANwA3ADAAOAAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA4AGUAYgBmADUAMAAx
AGUAZgBhADIANAA0ADgAMgBkAGEANQA5ADkAYgBiADcAYwBmAGEAZQAwADcANwAwADgAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAPAzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8ebf501efa24482da599bb7cfae07708</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::Constring</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D16.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;127&lt;/FileLine&gt;
&lt;FileColumn&gt;20&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">F7</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Dim Customers\Load Customers Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Dim Customers\Load Customers Data.Inputs[Input 0].Columns[CustomerID]"
                      cachedDataType="wstr"
                      cachedLength="5"
                      cachedName="CustomerID"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[CustomerID]" />
                    <inputColumn
                      refId="Package\Load Dim Customers\Load Customers Data.Inputs[Input 0].Columns[CompanyName]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="CompanyName"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[CompanyName]" />
                    <inputColumn
                      refId="Package\Load Dim Customers\Load Customers Data.Inputs[Input 0].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="City"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[City]" />
                    <inputColumn
                      refId="Package\Load Dim Customers\Load Customers Data.Inputs[Input 0].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="Country"
                      lineageId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output].Columns[Country]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Dim Customers\Load Customers Data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load Dim Customers\Load Customers Data.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Dim Customers.Paths[OLE DB Source Output]"
              endId="Package\Load Dim Customers\Load Customers Data.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Load Dim Customers\Get Customers.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Dim Employees"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{75626bd3-3ec3-47d8-827b-5df301b7c92b}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Dim Employees"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Dim Employees\Get Employees"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get Employees"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Employees]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Dim Employees\Get Employees.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost\SQLEXPRESS.Northwind]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost\SQLEXPRESS.Northwind]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[Region]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[Region]"
                      length="15"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[Region]"
                      name="Region"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[Country]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[Country]"
                      length="15"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[Country]"
                      name="Country"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[FirstName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[FirstName]"
                      length="10"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[FirstName]"
                      name="FirstName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[LastName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                      length="20"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[LastName]"
                      name="LastName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[EmployeeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[EmployeeID]"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[EmployeeID]"
                      name="EmployeeID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[Address]"
                      dataType="wstr"
                      length="60"
                      name="Address" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[City]"
                      dataType="wstr"
                      length="15"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[Region]"
                      dataType="wstr"
                      length="15"
                      name="Region" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[PostalCode]"
                      dataType="wstr"
                      length="10"
                      name="PostalCode" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[Country]"
                      dataType="wstr"
                      length="15"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                      dataType="wstr"
                      length="20"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[FirstName]"
                      dataType="wstr"
                      length="10"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[Title]"
                      dataType="wstr"
                      length="30"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[TitleOfCourtesy]"
                      dataType="wstr"
                      length="25"
                      name="TitleOfCourtesy" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[BirthDate]"
                      dataType="dbTimeStamp"
                      name="BirthDate" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[HireDate]"
                      dataType="dbTimeStamp"
                      name="HireDate" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[HomePhone]"
                      dataType="wstr"
                      length="24"
                      name="HomePhone" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[Extension]"
                      dataType="wstr"
                      length="4"
                      name="Extension" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[Photo]"
                      dataType="image"
                      name="Photo" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[Notes]"
                      dataType="nText"
                      name="Notes" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[ReportsTo]"
                      dataType="i4"
                      name="ReportsTo" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].ExternalColumns[PhotoPath]"
                      dataType="wstr"
                      length="255"
                      name="PhotoPath" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[Region]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[Region]"
                      name="Region" />
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[Country]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[Country]"
                      name="Country" />
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[FirstName]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[FirstName]"
                      name="FirstName" />
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[LastName]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[EmployeeID]"
                      dataType="i4"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Error Output].Columns[EmployeeID]"
                      name="EmployeeID" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Dim Employees\Load Employees Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Employees Data"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="42">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\OperationResult.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[namespace SC_8ebf501efa24482da599bb7cfae07708.Models
{
    public class OperationResult
    {
        public bool succedd { get; set; }
        public string Message { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Settings.get_Default():SC_8ebf501efa24482da599bb7cfae07708.Properties.Sett" +
    "ings")]

namespace SC_8ebf501efa24482da599bb7cfae07708.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_8ebf501efa24482da599bb7cfae07708</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_8ebf501efa24482da599bb7cfae07708</msb:DisplayName>
    <msb:ProjectId>{B59EEE93-ACFC-4B26-A76A-AB33E637A692}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_8ebf501efa24482da599bb7cfae07708.csproj" />
    <msb:File Include="DataServices\DataServiceCustomer.cs" />
    <msb:File Include="Models\CustomerModel.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="DataServices\IDataServiceCustomer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Models\OperationResult.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8ebf501efa24482da599bb7cfae07708")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8ebf501efa24482da599bb7cfae07708")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String Constring
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Constring"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8ebf501efa24482da599bb7cfae07708.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 EmployeeID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool EmployeeID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String FirstName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool FirstName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String LastName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool LastName_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Region
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Region_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Country
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Country_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Threading.Tasks;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        LoadEmployees(Row.EmployeeID, Row.FirstName, Row.LastName, Row.Region, Row.Country).GetAwaiter();
    }

    public async Task LoadEmployees(int employeeId, string firstName, string lastName, string region, string country)
    {
        try
        {
            using (SqlConnection connection = new SqlConnection("Server=localhost\\SQLEXPRESS;Database=DWHNorthwindOrders;Trusted_Connection=true;TrustServerCertificate=true;"))
            {
                using (SqlCommand command = new SqlCommand("DWH.LoadDimEmployee", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    command.Parameters.AddWithValue("EmployeeId", employeeId);
                    command.Parameters.AddWithValue("FirstName", firstName);
                    command.Parameters.AddWithValue("LastName", lastName);
                    command.Parameters.AddWithValue("Region", region);
                    command.Parameters.AddWithValue("Country", country);

                    await connection.OpenAsync();
                    await command.ExecuteNonQueryAsync();
                }
            }
        }
        catch (Exception e)
        {
            MessageBox.Show(e.Message);
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[DataServices\DataServiceCustomer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using SC_8ebf501efa24482da599bb7cfae07708.Models;
using System;
using System.Collections.Generic;
using System.Data.Common;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.DataServices
{
    public class DataServiceCustomer : IDataServiceCustomer
    {
        private readonly string connectionString;
        public DataServiceCustomer()
        {
            connectionString = "Server=LAPTOP-0H8B2SAT\\SQLEXPRESS;Database=DWHNorthwind;Trusted_Connection=true;TrustServerCertificate=true";
        }
        public async Task<OperationResult> loadCustomer(CustomerModel customer)
        {
            OperationResult result = new OperationResult();
            try
            {

            }
            catch(Exception ex)
            {
                result.succedd = false;
                result.Message = $"error procesando los clientes {ex.Message}";
            }

            return result;
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\CustomerModel.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.Models
{
    public class CustomerModel
    {
        public int CustomerId { get; set; }
        public string CustomerName { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[DataServices\IDataServiceCustomer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using SC_8ebf501efa24482da599bb7cfae07708.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.DataServices
{
    public interface IDataServiceCustomer
    {
        Task<OperationResult> loadCustomer(CustomerModel customer);
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8ebf501efa24482da599bb7cfae07708.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A2CADD09-E07C-4DDA-BE97-03D4AF5ACD02}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8ebf501efa24482da599bb7cfae07708</RootNamespace>
    <AssemblyName>SC_8ebf501efa24482da599bb7cfae07708</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="DataServices\DataServiceCustomer.cs" />
    <Compile Include="DataServices\IDataServiceCustomer.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Models\CustomerModel.cs" />
    <Compile Include="Models\OperationResult.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8ebf501efa24482da599bb7cfae07708.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
GAA8IwAAAADhAVoLBgAZANQlAAAAAOEB6wIbABkA5CUAAAAA4QFaCwYAGgA0JgAAAADhAesCGwAa
AAAAAQDCCwAAAQA9AQAAAgDEAgAAAwCtAgAABADbBgAABQDvCwAAAQAOCAAAAgDHCQAAAwCbBwAA
AQABAQAAAgDOAgAAAwAOCAAABACbBwAAAQAOCAAAAQDCCwAAAQD4CgAAAQD4CgAAAQCnBQAAAQCn
BQAAAQCnBQAAAQCnBQAAAQCnBQAAAQBLCAAAAQBLCAAAAQD7AgAAAQD7AgsAMAANAE0ADgBNAAkA
oAgBABEAoAgGABkAoAgKACkAoAgQADEAoAgQADkAoAgQAEEAoAgQAEkAoAgQAFEAoAgQAFkAoAgQ
AGEAoAgQAGkAoAgGAHkAoAgVAIkAoAgGAJkAWgsGAJkA6wIbANEAoAgGAAEBoAgGACEBoAghAPEA
gwUGAPEAjgUGAIEAlQgoALkAiwMyALkAHws3ALkA8AVEANkAoAhJANkADghTANkAxwlXAOEAbwBb
ANkAogZgAOEA2AVlANkAvgtqANkAdQpqAPEAoAgGAEEBDApuAPEA2wl2APkAoAgGAPEAsQl8AFEB
qQaCAPEAkguJAFkBYwuPAHEAbAKWAHEA1gueAAkBoAikACkBoAgGAAwAiwO5AAwAHws3AAwA8AXI
AMEAoAgQAMkAoAjfAIEBKQPmAMkAXwrtAJEBmgXzAKkBHgFEAKEAlQFqALkAfgH7AKEAqgoGAIEB
KAENARQAlQgdARwAlQFqABwAqgo2AbEBgwMGALEANgI7AbkBxgs/AbkAUAdGAbkAtAoGALkA6wIb
AAwAUAdGAQwAtApTAQwA6wIbAC4ACwAcAi4AEwAlAi4AGwBEAi4AIwBNAi4AKwB2Ai4AMwB2Ai4A
OwB2Ai4AQwBNAi4ASwB8Ai4AUwB2Ai4AWwCTAkMAYwABA4AAawDdAuEAcwABA+MAkwABAwEBcwAB
AyEBcwABA0EBcwABA2EBcwABA4kBmwBEAqMBcwABA6kBmwBEAsMBcwABAyAEcwABA0AEcwABA2AE
cwABA4AEcwABA8AEcwABA+AEcwABAwAFcwABAyAFcwABA4AFawAGA+AFiwABAyAGiwABAy0ArADS
AEwBAwABAAYACwAHAAwACAAOAAkADwAKABEAAAD2AP8BAABJBgMCAAC6AgcCAABzBgMCAACkAgcC
AABfBgMCAADUBgcCAACIBgMCAADnCwcCAACaBgMCAADmBQcCAAAZCAsCAABjAxECAACFChcCAABb
Af8BAACTAgcCAAB2AQMCAABGAgcCAgAHAAMAAgAIAAUAAgAJAAcAAgAKAAkAAgALAAsAAgAMAA0A
AgANAA8AAgAOABEAAgAPABMAAgAQABUAAgAZABcAAgAbABkAAgAcABsAAQAdABsAAgAeAB0AAgAh
AB8AAQAiAB8AAgAjACEAAQAkACEAAgAmACMAAQAnACMAAgAoACUAAQApACUADQBcAB8ADQBeACEA
DgBgAB8ADgBiACEAsQAWASYBBIAAAAEAAAAAAAAAAAAAAAAAxQAAAAQAAAAAAAAAAAAAAFkBFQEA
AAAAEAAAAAAAAAAAAAAAYgECCwAAAAAEAAAAAAAAAAAAAABZAQkBAAAAABAAAAAAAAAAAAAAAGIB
JQsAAAAABAAAAAAAAAAAAAAAWQGyBgAAAAAQAAAAAAAAAAAAAABiAaUHAAAAAAQAAAAAAAAAAAAA
AFkBPgoAAAAAAAAAAAEAAAAiCQAADQACAA4ACwAxAD8AXwDDAHEABgFxACwBAAAAAABJRFRTVmFy
aWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMAA8PnVfXzEA
VGFza2AxAEFzeW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAEdldEludDMyADxj
b25uZWN0aW9uPjVfXzIAPGxvYWRDdXN0b21lcj5kX18yADw+dV9fMgA8Y29tbWFuZD41X18zADxM
b2FkRW1wbG95ZWVzPmRfXzMAU0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDgAPE1v
ZHVsZT4AZ2V0X0VtcGxveWVlSUQASW5wdXRJRABTeXN0ZW0uRGF0YQBtc2NvcmxpYgBPcGVuQXN5
bmMARXhlY3V0ZU5vblF1ZXJ5QXN5bmMAZW1wbG95ZWVJZABnZXRfQ3VzdG9tZXJJZABzZXRfQ3Vz
dG9tZXJJZABnZXRfc3VjY2VkZABzZXRfc3VjY2VkZABBd2FpdFVuc2FmZU9uQ29tcGxldGVkAGdl
dF9Jc0NvbXBsZXRlZAA8Q3VzdG9tZXJJZD5rX19CYWNraW5nRmllbGQAPHN1Y2NlZGQ+a19fQmFj
a2luZ0ZpZWxkADxNZXNzYWdlPmtfX0JhY2tpbmdGaWVsZAA8Q3VzdG9tZXJOYW1lPmtfX0JhY2tp
bmdGaWVsZABEYkNvbW1hbmQAU3FsQ29tbWFuZABkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UA
c2V0X01lc3NhZ2UASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAZ2V0X0N1c3RvbWVyTmFtZQBzZXRfQ3VzdG9tZXJOYW1lAGdldF9MYXN0TmFtZQBsYXN0TmFt
ZQBnZXRfRmlyc3ROYW1lAGZpcnN0TmFtZQBJbnB1dE5hbWUASUFzeW5jU3RhdGVNYWNoaW5lAFNl
dFN0YXRlTWFjaGluZQBzdGF0ZU1hY2hpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxp
bmUAc2V0X0NvbW1hbmRUeXBlAFZhbHVlVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBDcmVhdGUARWRpdG9y
QnJvd3NhYmxlU3RhdGUAPD4xX19zdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXN5bmNTdGF0ZU1hY2hpbmVBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRl
AERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNT
SVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRl
AEFkZFdpdGhWYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAGNvbm5lY3Rpb25T
dHJpbmcAR2V0U3RyaW5nAGdldF9Db25zdHJpbmcAZ2V0X1Rhc2sAQ3VzdG9tZXJNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAU0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDguZGxs
AGdldF9FbXBsb3llZUlEX0lzTnVsbABnZXRfTGFzdE5hbWVfSXNOdWxsAGdldF9GaXJzdE5hbWVf
SXNOdWxsAGdldF9SZWdpb25fSXNOdWxsAGdldF9Db3VudHJ5X0lzTnVsbABnZXRfSXRlbQBTeXN0
ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBnZXRfUmVnaW9uAHJlZ2lvbgBTeXN0ZW0uQ29uZmln
dXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBTcWxQYXJhbWV0
ZXJDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAFNldEV4Y2VwdGlvbgBTeXN0
ZW0uRGF0YS5Db21tb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFw
AE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAEFzeW5jVGFza01l
dGhvZEJ1aWxkZXIAPD50X19idWlsZGVyAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3Jp
cHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBsb2FkQ3VzdG9tZXIASURhdGFTZXJ2aWNlQ3Vz
dG9tZXIAY3VzdG9tZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAFNx
bFBhcmFtZXRlcgBUYXNrQXdhaXRlcgBHZXRBd2FpdGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlh
Z25vc3RpY3MAU0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDguRGF0YVNlcnZpY2Vz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ184ZWJm
NTAxZWZhMjQ0ODJkYTU5OWJiN2NmYWUwNzcwOC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMATG9hZEVtcGxveWVlcwBTQ184ZWJmNTAxZWZhMjQ0ODJkYTU5OWJi
N2NmYWUwNzcwOC5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5J
bmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAU3lzdGVtLlRocmVhZGluZy5UYXNrcwBF
cXVhbHMAU0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDguTW9kZWxzAFN5c3RlbS5X
aW5kb3dzLkZvcm1zAENvbm5lY3Rpb25zAGdldF9QYXJhbWV0ZXJzAE9iamVjdABFbmRPZlJvd3Nl
dABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAT3BlcmF0aW9uUmVzdWx0AEdldFJlc3VsdABTZXRS
ZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50
AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AFN0YXJ0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQATW92ZU5leHQA
R2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVh
dG9yQ29udGV4dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAU2hvdwBNZXNzYWdlQm94
AGdldF9Bc3NlbWJseQBnZXRfQ291bnRyeQBjb3VudHJ5AAAAD0kAbgBwAHUAdAAgADAAABNDAG8A
bgBzAHQAcgBpAG4AZwAAcVMAQwBfADgAZQBiAGYANQAwADEAZQBmAGEAMgA0ADQAOAAyAGQAYQA1
ADkAOQBiAGIANwBjAGYAYQBlADAANwA3ADAAOAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAgNdTAGUAcgB2AGUAcgA9AEwAQQBQAFQATwBQAC0AMABIADgAQgAyAFMA
QQBUAFwAUwBRAEwARQBYAFAAUgBFAFMAUwA7AEQAYQB0AGEAYgBhAHMAZQA9AEQAVwBIAE4AbwBy
AHQAaAB3AGkAbgBkADsAVAByAHUAcwB0AGUAZABfAEMAbwBuAG4AZQBjAHQAaQBvAG4APQB0AHIA
dQBlADsAVAByAHUAcwB0AFMAZQByAHYAZQByAEMAZQByAHQAaQBmAGkAYwBhAHQAZQA9AHQAcgB1
AGUAAYDZUwBlAHIAdgBlAHIAPQBsAG8AYwBhAGwAaABvAHMAdABcAFMAUQBMAEUAWABQAFIARQBT
AFMAOwBEAGEAdABhAGIAYQBzAGUAPQBEAFcASABOAG8AcgB0AGgAdwBpAG4AZABPAHIAZABlAHIA
cwA7AFQAcgB1AHMAdABlAGQAXwBDAG8AbgBuAGUAYwB0AGkAbwBuAD0AdAByAHUAZQA7AFQAcgB1
AHMAdABTAGUAcgB2AGUAcgBDAGUAcgB0AGkAZgBpAGMAYQB0AGUAPQB0AHIAdQBlADsAACdEAFcA
SAAuAEwAbwBhAGQARABpAG0ARQBtAHAAbABvAHkAZQBlAAAVRQBtAHAAbABvAHkAZQBlAEkAZAAA
E0YAaQByAHMAdABOAGEAbQBlAAARTABhAHMAdABOAGEAbQBlAAANUgBlAGcAaQBvAG4AAA9DAG8A
dQBuAHQAcgB5AAAAAADulmEJKYHzQIdymya97CYDAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARI5
BSABARJNBiABARGAjQQgABFRBAcBETQEAAARXQcwAQEBEB4ABAoBETQEIAASQQkgAwEScR0IEnUD
BhJxAwYdCAQgAQgIBCABAggEIAEOCAMgAAIHIAICDhGApQUgAR0ICAUgABKAqQYgARKArRwFAAAS
gLEGIAEcEoC1BwABEjkRgLkFIAASgL0HIAIBDhKAvQQHARE4BxURgJ0BEigJAAAVEYCdARMABAoB
ETgJIAAVEoCZARMADAcECBFRFRFVAQgSWQYgAgEOEmEGIAEBEYDFBSAAEoDJByACEoDRDhwKMAIC
ARAeABAeAQYKAhFRETQIIAAVEoCZAQgGFRKAmQEICCAAFRFVARMABRURVQEICQoCFRFVAQgRNAQg
ABMAAyAADgYAARGA4Q4FIAEBElkGBwISKBJZBSABARMACLd6XFYZNOCJCImEXc2AgMyRAwYSFAMG
EhgDBhJ5BAYSgIUEBhKAiQMGEiACBggCBg4CBgIDBhFdAwYSYQMGEmUDBhFRBgYVEVUBCAgGFRGA
nQESKAUgAQESDAkgBRJBCA4ODg4DIAAICSAEAQgOEnESdQUgAQESeQUAABKAhQUAABKAiQYAAQES
gIkEAAASIAMAAAEEIAEBAgsgARUSgJkBEigSJAMoAAgDKAACAygADgUIABKAhQUIABKAiQQIABIg
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ184
ZWJmNTAxZWZhMjQ0ODJkYTU5OWJiN2NmYWUwNzcwOAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEi5ORVQgRnJhbWV3b3JrIDQuNyMBAB5TY3JpcHRNYWluKzxMb2FkRW1wbG95ZWVzPmRfXzMA
AAQBAAAAXAEAV1NDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3NzA4LkRhdGFTZXJ2aWNl
cy5EYXRhU2VydmljZUN1c3RvbWVyKzxsb2FkQ3VzdG9tZXI+ZF9fMgAAALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACs
RAAAAAAAAAAAAADGRAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuEQAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA4
AGUAYgBmADUAMAAxAGUAZgBhADIANAA0ADgAMgBkAGEANQA5ADkAYgBiADcAYwBmAGEAZQAwADcA
NwAwADgAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADgAZQBiAGYANQAwADEAZQBmAGEA
MgA0ADQAOAAyAGQAYQA1ADkAOQBiAGIANwBjAGYAYQBlADAANwA3ADAAOAAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOABlAGIAZgA1ADAA
MQBlAGYAYQAyADQANAA4ADIAZABhADUAOQA5AGIAYgA3AGMAZgBhAGUAMAA3ADcAMAA4AC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADgAZQBiAGYANQAwADEA
ZQBmAGEAMgA0ADQAOAAyAGQAYQA1ADkAOQBiAGIANwBjAGYAYQBlADAANwA3ADAAOAAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA2DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8ebf501efa24482da599bb7cfae07708</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::Constring</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">31</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Dim Employees\Load Employees Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Dim Employees\Load Employees Data.Inputs[Input 0].Columns[EmployeeID]"
                      cachedDataType="i4"
                      cachedName="EmployeeID"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[EmployeeID]" />
                    <inputColumn
                      refId="Package\Load Dim Employees\Load Employees Data.Inputs[Input 0].Columns[FirstName]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="FirstName"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[FirstName]" />
                    <inputColumn
                      refId="Package\Load Dim Employees\Load Employees Data.Inputs[Input 0].Columns[LastName]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="LastName"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Load Dim Employees\Load Employees Data.Inputs[Input 0].Columns[Region]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="Region"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[Region]" />
                    <inputColumn
                      refId="Package\Load Dim Employees\Load Employees Data.Inputs[Input 0].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="Country"
                      lineageId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output].Columns[Country]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Dim Employees\Load Employees Data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load Dim Employees\Load Employees Data.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Dim Employees.Paths[OLE DB Source Output]"
              endId="Package\Load Dim Employees\Load Employees Data.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Load Dim Employees\Get Employees.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Dim Product"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{f2e0256f-7fae-43a0-9669-4e5c7fa800cf}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Dim Product"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Dim Product\Get Product"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get Product"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Products]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Dim Product\Get Product.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost\SQLEXPRESS.Northwind]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost\SQLEXPRESS.Northwind]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[ProductID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[ProductID]"
                      name="ProductID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[ProductName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[ProductName]"
                      length="40"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[ProductName]"
                      name="ProductName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[UnitPrice]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[UnitPrice]"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[UnitPrice]"
                      name="UnitPrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[CategoryID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[CategoryID]"
                      name="CategoryID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                      dataType="i4"
                      name="ProductID" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[ProductName]"
                      dataType="wstr"
                      length="40"
                      name="ProductName" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[SupplierID]"
                      dataType="i4"
                      name="SupplierID" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[CategoryID]"
                      dataType="i4"
                      name="CategoryID" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[QuantityPerUnit]"
                      dataType="wstr"
                      length="20"
                      name="QuantityPerUnit" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[UnitPrice]"
                      dataType="cy"
                      name="UnitPrice" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[UnitsInStock]"
                      dataType="i2"
                      name="UnitsInStock" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[UnitsOnOrder]"
                      dataType="i2"
                      name="UnitsOnOrder" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[ReorderLevel]"
                      dataType="i2"
                      name="ReorderLevel" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].ExternalColumns[Discontinued]"
                      dataType="bool"
                      name="Discontinued" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                      dataType="i4"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                      name="ProductID" />
                    <outputColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[ProductName]"
                      dataType="wstr"
                      length="40"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[ProductName]"
                      name="ProductName" />
                    <outputColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[UnitPrice]"
                      dataType="cy"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[UnitPrice]"
                      name="UnitPrice" />
                    <outputColumn
                      refId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                      dataType="i4"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Error Output].Columns[CategoryID]"
                      name="CategoryID" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Dim Product\Load Product Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Product Data"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="42">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\OperationResult.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[namespace SC_8ebf501efa24482da599bb7cfae07708.Models
{
    public class OperationResult
    {
        public bool succedd { get; set; }
        public string Message { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Settings.get_Default():SC_8ebf501efa24482da599bb7cfae07708.Properties.Sett" +
    "ings")]

namespace SC_8ebf501efa24482da599bb7cfae07708.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_8ebf501efa24482da599bb7cfae07708</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_8ebf501efa24482da599bb7cfae07708</msb:DisplayName>
    <msb:ProjectId>{2B31736A-8449-418B-919B-E196C5D77FA9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_8ebf501efa24482da599bb7cfae07708.csproj" />
    <msb:File Include="DataServices\DataServiceCustomer.cs" />
    <msb:File Include="Models\CustomerModel.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="DataServices\IDataServiceCustomer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Models\OperationResult.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8ebf501efa24482da599bb7cfae07708")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8ebf501efa24482da599bb7cfae07708")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String Constring
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Constring"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8ebf501efa24482da599bb7cfae07708.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ProductID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ProductID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ProductName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool ProductName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 CategoryID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool CategoryID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Decimal UnitPrice
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[3]);
        }
    }
    public bool UnitPrice_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Threading.Tasks;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        LoadProducts(Row.ProductID, Row.ProductName, Row.CategoryID, Row.UnitPrice).GetAwaiter();
    }

    public async Task LoadProducts(int productId, string productName, int categoryId, decimal unitPrice)
    {
        try
        {
            using (SqlConnection connection = new SqlConnection("Server=localhost\\SQLEXPRESS;Database=DWHNorthwindOrders;Trusted_Connection=true;TrustServerCertificate=true;"))
            {
                using (SqlCommand command = new SqlCommand("DWH.LoadDimProduct", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    command.Parameters.AddWithValue("ProductId", productId);
                    command.Parameters.AddWithValue("ProductName", productName);
                    command.Parameters.AddWithValue("CategoryId", categoryId);
                    command.Parameters.AddWithValue("UnitPrice", unitPrice);

                    await connection.OpenAsync();
                    await command.ExecuteNonQueryAsync();
                }
            }
        }
        catch (Exception e)
        {
            MessageBox.Show(e.Message);
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[DataServices\DataServiceCustomer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using SC_8ebf501efa24482da599bb7cfae07708.Models;
using System;
using System.Collections.Generic;
using System.Data.Common;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.DataServices
{
    public class DataServiceCustomer : IDataServiceCustomer
    {
        private readonly string connectionString;
        public DataServiceCustomer()
        {
            connectionString = "Server=LAPTOP-0H8B2SAT\\SQLEXPRESS;Database=DWHNorthwind;Trusted_Connection=true;TrustServerCertificate=true";
        }
        public async Task<OperationResult> loadCustomer(CustomerModel customer)
        {
            OperationResult result = new OperationResult();
            try
            {

            }
            catch(Exception ex)
            {
                result.succedd = false;
                result.Message = $"error procesando los clientes {ex.Message}";
            }

            return result;
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\CustomerModel.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.Models
{
    public class CustomerModel
    {
        public int CustomerId { get; set; }
        public string CustomerName { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[DataServices\IDataServiceCustomer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using SC_8ebf501efa24482da599bb7cfae07708.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.DataServices
{
    public interface IDataServiceCustomer
    {
        Task<OperationResult> loadCustomer(CustomerModel customer);
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8ebf501efa24482da599bb7cfae07708.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A2CADD09-E07C-4DDA-BE97-03D4AF5ACD02}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8ebf501efa24482da599bb7cfae07708</RootNamespace>
    <AssemblyName>SC_8ebf501efa24482da599bb7cfae07708</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="DataServices\DataServiceCustomer.cs" />
    <Compile Include="DataServices\IDataServiceCustomer.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Models\CustomerModel.cs" />
    <Compile Include="Models\OperationResult.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8ebf501efa24482da599bb7cfae07708.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPdkz2cAAAAAAAAAAOAAIiALATAAACYAAAAIAAAAAAAAYkQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABBEAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaCQAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
RAAAAAAAAEgAAAACAAUABCYAAFQdAAABAAAAAAAAAFhDAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBQAAAoqHgIoFQAACiqWAgNvBwAABgNvCQAABgNvCwAA
BgNvDQAABigEAAAGbxYAAAomKgAAEzACAFAAAAABAAAREgAoFwAACn0OAAAEEgADfQ8AAAQSAAR9
EAAABBIABX0RAAAEEgAOBH0SAAAEEgAVfQ0AAAQSAHwOAAAEEgAoAQAAKxIAfA4AAAQoGQAACioe
AigRAAAGKioCAwQFKBoAAAoqUgJ7GwAACgJ7HAAAChaUbx0AAAoqIgIWKB4AAAoqUgJ7GwAACgJ7
HAAACheUbx8AAAoqIgIXKB4AAAoqUgJ7GwAACgJ7HAAAChiUbx0AAAoqIgIYKB4AAAoqUgJ7GwAA
CgJ7HAAAChmUbyAAAAoqIgIZKB4AAAoqHgIoIQAACioeAigiAAAKKn4CKCMAAAoCAnMVAAAGfQEA
AAQCAnMWAAAGfQIAAAQqkgRyAQAAcBpvJAAACiwVAgUCAyglAAAKDgRzBgAABm8TAAAGKkorBwID
bxQAAAYDbw8AAAYt8SoGKjoCKCYAAAoCA30DAAAEKjoCKCYAAAoCA30EAAAEKpYCewQAAARvJwAA
CnIRAABwbygAAAooKQAACm8qAAAKdCkAAAEqHgIoJgAACiqufgUAAAQtHnIlAABw0AcAAAIoKwAA
Cm8sAAAKcy0AAAqABQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoeAiguAAAKKi5zHQAA
BoAHAAAEKh4CewgAAAQqIgIDfQgAAAQqHgJ7CQAABCoiAgN9CQAABCoeAnsKAAAEKiICA30KAAAE
Kh4CewsAAAQqIgIDfQsAAAQqSgIoJgAACgJylwAAcH0MAAAEKgAAEzACAC8AAAACAAAREgAoLwAA
Cn0YAAAEEgAVfRcAAAQSAHwYAAAEEgAoAgAAKxIAfBgAAAQoMQAACioAGzADABMCAAADAAARAnsN
AAAECgYXJiYABhc2EAJycAEAcHMyAAAKfRMAAAQABhc2FgJySwIAcAJ7EwAABHMzAAAKfRQAAAQA
BjnPAAAABhc7KAEAAAJ7FAAABBpvNAAACgJ7FAAABG81AAAKcnECAHACew8AAASMNAAAAW82AAAK
JgJ7FAAABG81AAAKcoUCAHACexAAAARvNgAACiYCexQAAARvNQAACnKdAgBwAnsRAAAEjDQAAAFv
NgAACiYCexQAAARvNQAACnKzAgBwAnsSAAAEjBEAAAFvNgAACiYCexMAAARvNwAACm8WAAAKCxIB
KDgAAAotPwIWJQp9DQAABAIHfRUAAAQCfA4AAAQSAQIoAwAAK90BAQAAAnsVAAAECwJ8FQAABP4V
FQAAAQIVJQp9DQAABBIBKDoAAAoCexQAAARvOwAACm88AAAKDBICKD0AAAotPwIXJQp9DQAABAII
fRYAAAQCfA4AAAQSAgIoBAAAK92hAAAAAnsWAAAEDAJ8FgAABP4VAwAAGwIVJQp9DQAABBICKD4A
AAom3hgGFi8TAnsUAAAELAsCexQAAARvPwAACtwCFH0UAAAE3hgGFi8TAnsTAAAELAsCexMAAARv
PwAACtwCFH0TAAAE3g1vQAAACihBAAAKJt4A3hcNAh/+fQ0AAAQCfA4AAAQJKEIAAAreEwIf/n0N
AAAEAnwOAAAEKEMAAAoqAEFkAAACAAAAPAAAAFsBAACXAQAAGAAAAAAAAAACAAAAIQAAAJcBAAC4
AQAAGAAAAAAAAAAAAAAADAAAAM0BAADZAQAADQAAABcAAAEAAAAABwAAAOEBAADoAQAAFwAAABcA
AAE2AnwOAAAEAyhEAAAKKgAAGzACADQAAAAEAAARcygAAAYK3hcLAh/+fRcAAAQCfBgAAAQHKEUA
AAreFAIf/n0XAAAEAnwYAAAEBihGAAAKKgEQAAAAAAAACAgAFxcAAAE2AnwYAAAEAyhHAAAKKgAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAArAoAACN+AAAYCwAA7AsAACNTdHJp
bmdzAAAAAAQXAADIAgAAI1VTAMwZAAAQAAAAI0dVSUQAAADcGQAAeAMAACNCbG9iAAAAAAAAAAIA
AAFXF6ILCQsAAAD6ATMAFgAAAQAAADkAAAAOAAAAGAAAAC8AAAAZAAAAAwAAAEcAAAAiAAAABAAA
AAYAAAAQAAAAFQAAAAQAAAADAAAAAQAAAAcAAAABAAAAAgAAAAQAAAAAAEUGAQAAAAAABgDuBPoI
BgCCBfoIBgAHBLYIDwBuCQAABgA0BBUHBgDRBBUHBgCyBBUHBgBpBRUHBgAOBRUHBgAnBRUHBgBm
BBUHBgCBBMoFCgBCBSUDBgBbA80GBgBLBPoIBgARBvAJBgAZBs0GBgDPA/oIBgBWA80GBgD1AvoI
BgCSCPoIBgBhAPoIBgBcB80GBgDRB/oIDgBLB8YKDgAyAsYKBgCaBLYICgARCCUDEgACCCUDCgCW
ByUDCgD6CiUDBgB2Cs0GBgDqA7YIBgAiCBoJBgCKBwAHFgCvAy8GFgAbBC8GFgCIA+sGBgBBAPAJ
BgBIAPoIBgD4Bc0GBgB5B80GGgARAF0IGgABAF0IfwB/CwAAGgAiAF0IBgCJAs0GBgDiCxUHDgAo
AmYHDgBKAxYBDgAnB8YKBgByAM0GDgCFCMYKDgA+B2YHBgB9As0GHgDTCzkKHgCVCjkKAAAAAOgA
AAAAAAEAAQABABAA4AYAABAAAQABAAEAEAD1BwAAcQABAAYAAQAQANwKAAB9AAEAEQABABAATgoA
AIEAAwAVAAEAEAC4CQAAgQAEABYAAAAQACEJfQmBAAUAGAAAARAA5wl9CZkABwAcAAEAEAAhBg4K
gQAIAB8AAQAQAKIKDgqBAAoAJAABABAAQAjJCIEADAApAKEAEAA/CMkIAAANACsAAwEQALEAAABN
AA0ALAADARAAiQAAAE0AFwAuAAYATgpxAQYAuAl1AQEA6gp5AQEA6gp5AREA1AZ9AREAeAOCAREA
VQKHAQEAvAGLAQEACgKOAQEA2AGRAQEA8QGOASEA5AWOAQYAxAOLAQYA6AeUAQYAaAGLAQYA3wKO
AQYAcgGLAQYASwKYAQEAeACcAQEAowCgAQEAOgCkAQEAnACoAQYAxAOLAQYA6AevAVAgAAAAAMYA
oAUGAAEAWCAAAAAAxgCrBQYAAQBgIAAAAADGAK8LuAEBAIggAAAAAIYAaQq+AQIA5CAAAAAAhhip
CAYABgDsIAAAAACGGKkISQAGAPcgAAAAAIYI8QDIAQkADCEAAAAAhghtBnAACQAVIQAAAACGCM8C
QQEJACohAAAAAIYIrQZwAAkAMyEAAAAAhggHAcgBCQBIIQAAAACGCIIGcAAJAFEhAAAAAIYIPQLM
AQkAZiEAAAAAhgiYBnAACQBvIQAAAACGAMYLcAAJAHchAAAAAIYAfQpwAAkAfyEAAAAAhhipCAYA
CQCfIQAAAADGAFUL0QEJAMQhAAAAAMYBTgu4AQ0A1yEAAAAAxgGvC7gBDgDZIQAAAACGGKkI2wEP
AOghAAAAAIYYqQjbARAA9yEAAAAAhgj/BUEBEQAdIgAAAACDGKkIBgARACUiAAAAAJMIHgjhAREA
USIAAAAAkwhgA+cBEQBYIgAAAACTCGwD7QERAGAiAAAAAJYIiQr0ARIAZyIAAAAAhhipCAYAEgBv
IgAAAACRGK8I+QESAHsiAAAAAIYISgHIARIAgyIAAAAAhghZAQEAEgCMIgAAAACGCK0CQQETAJQi
AAAAAIYIvgIQABMAHSIAAAAAhhipCAYAFACdIgAAAACGCH0BcAAUAKUiAAAAAIYIiQH9ARQAriIA
AAAAhghlAkEBFQC2IgAAAACGCHECEAAVAB0iAAAAAIYYqQgGABYAvyIAAAAAhhipCAYAFgDUIgAA
AADmATIIAgIWAAAAAAAAAMYFMggCAhcAECMAAAAA4QFiCwYAGACUJQAAAADhAQgDGwAYAKQlAAAA
AOEBYgsGABkA9CUAAAAA4QEIAxsAGQAAAAEAygsAAAEAaAEAAAIA3wIAAAMAcgEAAAQASwIAAAEA
FwgAAAIAwgkAAAMApAcAAAEA/wAAAAIA6wIAAAMAFwgAAAQApAcAAAEAFwgAAAEAygsAAAEAAAsA
AAEAAAsAAAEAxAUAAAEAxAUAAAEAxAUAAAEAxAUAAAEAxAUAAAEAVAgAAAEAVAgAAAEAGAMAAAEA
GAMLADAADQBRAA4AUQAJAKkIAQARAKkIBgAZAKkICgApAKkIEAAxAKkIEAA5AKkIEABBAKkIEABJ
AKkIEABRAKkIEABZAKkIEABhAKkIEABpAKkIBgB5AKkIFQCRAKkIBgChAGILBgChAAgDGwDZAKkI
BgAJAakIBgApAakIIQD5AKAFBgD5AKsFBgCBAJ4IKADBAKgDMgDBACcLNwDBAA0GRADhAKkISQDh
ABcIUwDhAMIJVwDpAG8AWwDhAL0GYADpAPUFZQDpABYGagDhAMYLcADhAH0KcAD5AKkIBgBJAQcK
dAD5ANYJfAABAakIBgD5AKwJggBZAcQGiAD5AJoLjwBhAWsLlQBxAJsCnABxAN4LpAARAakIqgAx
AakIBgAMAKgDvwAMACcLNwAMAA0GzgDJAKkIEADRAKkI5QCJAUYD7ADRAFoK8wCZAbcF+QCxASsB
RACpAKwBcADBAJUBAQGpALIKBgCJATUBEwEUAJ4IIwEcAKwBcAAcALIKPAG5AaADBgC5AGUCQQHB
Ac4LRQHBAFkHTAHBALwKBgDBAAgDGwAMAFkHTAEMALwKWQEMAAgDGwAuAAsAMAIuABMAOQIuABsA
WAIuACMAYQIuACsAigIuADMAigIuADsAigIuAEMAYQIuAEsAkAIuAFMAigIuAFsApwJDAGMAFAOA
AGsA8QLhAHMAFAPjAJMAFAMBAXMAFAMhAXMAFANBAXMAFANJAZsAWAJhAXMAFANpAZsAWAKjAXMA
FAPDAXMAFAPgA3MAFAMABHMAFAMgBHMAFANABHMAFAOABHMAFAOgBHMAFAPABHMAFAPgBHMAFANA
BWsAGQOgBYsAFAPgBYsAFAMtALIA2ABSAQMAAQAGAAkABwAKAAgADAAJAA0ACgAPAAAA9QAOAgAA
cQYSAgAA0wIWAgAAsQYSAgAACwEOAgAAhgYSAgAAQQIaAgAAnAYSAgAAAwYWAgAAIggfAgAAgAMl
AgAAjQorAgAAXQEOAgAAwgIWAgAAjQESAgAAdQIWAgIABwADAAIACAAFAAIACQAHAAIACgAJAAIA
CwALAAIADAANAAIADQAPAAIADgARAAIAFwATAAIAGQAVAAIAGgAXAAEAGwAXAAIAHAAZAAIAHwAb
AAEAIAAbAAIAIQAdAAEAIgAdAAIAJAAfAAEAJQAfAAIAJgAhAAEAJwAhAA0AWAAfAA0AWgAhAA4A
XAAfAA4AXgAhALcAHAEsAQSAAAABAAAAAAAAAAAAAAAAAMQAAAAEAAAAAAAAAAAAAABfASIBAAAA
ABAAAAAAAAAAAAAAAGgBCgsAAAAABAAAAAAAAAAAAAAAXwEWAQAAAAAQAAAAAAAAAAAAAABoAS0L
AAAAAAQAAAAAAAAAAAAAAF8BzQYAAAAAEAAAAAAAAAAAAAAAaAGuBwAAAAAEAAAAAAAAAAAAAABf
ATkKAAAAAAAAAAABAAAAKwkAAA0AAgAOAAsAMQA/AGEAyQBzAAwBcwAyAQAAAAAASURUU1Zhcmlh
YmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAPD51X18xAFRh
c2tgMQBBc3luY1Rhc2tNZXRob2RCdWlsZGVyYDEAVGFza0F3YWl0ZXJgMQBHZXRJbnQzMgA8Y29u
bmVjdGlvbj41X18yADxsb2FkQ3VzdG9tZXI+ZF9fMgA8PnVfXzIAPGNvbW1hbmQ+NV9fMwA8TG9h
ZFByb2R1Y3RzPmRfXzMAU0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDgAPE1vZHVs
ZT4AZ2V0X1Byb2R1Y3RJRABJbnB1dElEAGdldF9DYXRlZ29yeUlEAFN5c3RlbS5EYXRhAG1zY29y
bGliAE9wZW5Bc3luYwBFeGVjdXRlTm9uUXVlcnlBc3luYwBnZXRfQ3VzdG9tZXJJZABzZXRfQ3Vz
dG9tZXJJZABwcm9kdWN0SWQAY2F0ZWdvcnlJZABnZXRfc3VjY2VkZABzZXRfc3VjY2VkZABBd2Fp
dFVuc2FmZU9uQ29tcGxldGVkAGdldF9Jc0NvbXBsZXRlZAA8Q3VzdG9tZXJJZD5rX19CYWNraW5n
RmllbGQAPHN1Y2NlZGQ+a19fQmFja2luZ0ZpZWxkADxNZXNzYWdlPmtfX0JhY2tpbmdGaWVsZAA8
Q3VzdG9tZXJOYW1lPmtfX0JhY2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29tbWFuZABnZXRfVW5p
dFByaWNlAHVuaXRQcmljZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UAc2V0X01lc3NhZ2UA
SURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X0N1c3Rv
bWVyTmFtZQBzZXRfQ3VzdG9tZXJOYW1lAGdldF9Qcm9kdWN0TmFtZQBwcm9kdWN0TmFtZQBJbnB1
dE5hbWUASUFzeW5jU3RhdGVNYWNoaW5lAFNldFN0YXRlTWFjaGluZQBzdGF0ZU1hY2hpbmUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAc2V0X0NvbW1hbmRUeXBlAFZhbHVlVHlwZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UARGlzcG9zZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAPD4xX19zdGF0ZQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVn
Z2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXN5bmNTdGF0ZU1hY2hpbmVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAGNvbm5lY3Rpb25TdHJpbmcAR2V0U3RyaW5nAGdldF9Db25zdHJpbmcA
Z2V0X1Rhc2sAR2V0RGVjaW1hbABDdXN0b21lck1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
Q184ZWJmNTAxZWZhMjQ0ODJkYTU5OWJiN2NmYWUwNzcwOC5kbGwAZ2V0X1Byb2R1Y3RJRF9Jc051
bGwAZ2V0X0NhdGVnb3J5SURfSXNOdWxsAGdldF9Vbml0UHJpY2VfSXNOdWxsAGdldF9Qcm9kdWN0
TmFtZV9Jc051bGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3Fs
UGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBTZXRFeGNlcHRp
b24AU3lzdGVtLkRhdGEuQ29tbW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0
TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABBc3lu
Y1Rhc2tNZXRob2RCdWlsZGVyADw+dF9fYnVpbGRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAbG9hZEN1c3RvbWVyAElEYXRhU2Vy
dmljZUN1c3RvbWVyAGN1c3RvbWVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3Jh
cHBlcgBTcWxQYXJhbWV0ZXIAVGFza0F3YWl0ZXIAR2V0QXdhaXRlcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFNDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3NzA4LkRhdGFT
ZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
U0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDguUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3
NzA4LlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMA
R2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzAEVxdWFscwBT
Q184ZWJmNTAxZWZhMjQ0ODJkYTU5OWJiN2NmYWUwNzcwOC5Nb2RlbHMAU3lzdGVtLldpbmRvd3Mu
Rm9ybXMAQ29ubmVjdGlvbnMAZ2V0X1BhcmFtZXRlcnMATG9hZFByb2R1Y3RzAE9iamVjdABFbmRP
ZlJvd3NldABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAT3BlcmF0aW9uUmVzdWx0AEdldFJlc3Vs
dABTZXRSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29t
cG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AFN0YXJ0
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQATW92
ZU5leHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRf
RXZhbHVhdG9yQ29udGV4dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAU2hvdwBNZXNz
YWdlQm94AGdldF9Bc3NlbWJseQAAAA9JAG4AcAB1AHQAIAAwAAATQwBvAG4AcwB0AHIAaQBuAGcA
AHFTAEMAXwA4AGUAYgBmADUAMAAxAGUAZgBhADIANAA0ADgAMgBkAGEANQA5ADkAYgBiADcAYwBm
AGEAZQAwADcANwAwADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AIDXUwBlAHIAdgBlAHIAPQBMAEEAUABUAE8AUAAtADAASAA4AEIAMgBTAEEAVABcAFMAUQBMAEUA
WABQAFIARQBTAFMAOwBEAGEAdABhAGIAYQBzAGUAPQBEAFcASABOAG8AcgB0AGgAdwBpAG4AZAA7
AFQAcgB1AHMAdABlAGQAXwBDAG8AbgBuAGUAYwB0AGkAbwBuAD0AdAByAHUAZQA7AFQAcgB1AHMA
dABTAGUAcgB2AGUAcgBDAGUAcgB0AGkAZgBpAGMAYQB0AGUAPQB0AHIAdQBlAAGA2VMAZQByAHYA
ZQByAD0AbABvAGMAYQBsAGgAbwBzAHQAXABTAFEATABFAFgAUABSAEUAUwBTADsARABhAHQAYQBi
AGEAcwBlAD0ARABXAEgATgBvAHIAdABoAHcAaQBuAGQATwByAGQAZQByAHMAOwBUAHIAdQBzAHQA
ZQBkAF8AQwBvAG4AbgBlAGMAdABpAG8AbgA9AHQAcgB1AGUAOwBUAHIAdQBzAHQAUwBlAHIAdgBl
AHIAQwBlAHIAdABpAGYAaQBjAGEAdABlAD0AdAByAHUAZQA7AAAlRABXAEgALgBMAG8AYQBkAEQA
aQBtAFAAcgBvAGQAdQBjAHQAABNQAHIAbwBkAHUAYwB0AEkAZAAAF1AAcgBvAGQAdQBjAHQATgBh
AG0AZQAAFUMAYQB0AGUAZwBvAHIAeQBJAGQAABNVAG4AaQB0AFAAcgBpAGMAZQAAAA90zHJuU1dE
q+3LoxshFgkABCABAQgDIAABBSABARERBCABAQ4FIAEBEjkFIAEBElEGIAEBEYCRBCAAEVUEBwER
NAQAABFhBzABAQEQHgAECgERNAQgABJBCSADARJ1HQgSeQMGEnUDBh0IBCABCAgEIAECCAQgAQ4I
BSABEUUIAyAAAgcgAgIOEYCpBSABHQgIBSAAEoCtBiABEoCxHAUAABKAtQYgARwSgLkHAAESORGA
vQUgABKAwQcgAgEOEoDBBAcBETgHFRGAoQESKAkAABURgKEBEwAECgEROAkgABUSgJ0BEwAMBwQI
EVUVEVkBCBJdBiACAQ4SZQYgAQERgMkFIAASgM0HIAISgNUOHAowAgIBEB4AEB4BBgoCEVURNAgg
ABUSgJ0BCAYVEoCdAQgIIAAVEVkBEwAFFRFZAQgJCgIVEVkBCBE0BCAAEwADIAAOBgABEYDlDgUg
AQESXQYHAhIoEl0FIAEBEwAIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEn0EBhKAiQQGEoCN
AwYSIAIGCAIGDgIGAgMGEWEDBhFFAwYSZQMGEmkDBhFVBgYVEVkBCAgGFRGAoQESKAUgAQESDAkg
BBJBCA4IEUUDIAAIBCAAEUUJIAQBCA4SdRJ5BSABARJ9BQAAEoCJBQAAEoCNBgABARKAjQQAABIg
AwAAAQQgAQECCyABFRKAnQESKBIkAygACAMoAAIDKAAOBCgAEUUFCAASgIkFCAASgI0ECAASIAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfOGVi
ZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAy
NQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRIuTkVUIEZyYW1ld29yayA0LjciAQAdU2NyaXB0TWFpbis8TG9hZFByb2R1Y3RzPmRfXzMAAAQB
AAAAXAEAV1NDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3NzA4LkRhdGFTZXJ2aWNlcy5E
YXRhU2VydmljZUN1c3RvbWVyKzxsb2FkQ3VzdG9tZXI+ZF9fMgAAAAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAOEQA
AAAAAAAAAAAAUkQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEREAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA4
AGUAYgBmADUAMAAxAGUAZgBhADIANAA0ADgAMgBkAGEANQA5ADkAYgBiADcAYwBmAGEAZQAwADcA
NwAwADgAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADgAZQBiAGYANQAwADEAZQBmAGEA
MgA0ADQAOAAyAGQAYQA1ADkAOQBiAGIANwBjAGYAYQBlADAANwA3ADAAOAAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOABlAGIAZgA1ADAA
MQBlAGYAYQAyADQANAA4ADIAZABhADUAOQA5AGIAYgA3AGMAZgBhAGUAMAA3ADcAMAA4AC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADgAZQBiAGYANQAwADEA
ZQBmAGEAMgA0ADQAOAAyAGQAYQA1ADkAOQBiAGIANwBjAGYAYQBlADAANwA3ADAAOAAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAZDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8ebf501efa24482da599bb7cfae07708</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::Constring</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">61</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Dim Product\Load Product Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Dim Product\Load Product Data.Inputs[Input 0].Columns[ProductID]"
                      cachedDataType="i4"
                      cachedName="ProductID"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[ProductID]" />
                    <inputColumn
                      refId="Package\Load Dim Product\Load Product Data.Inputs[Input 0].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="ProductName"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[ProductName]" />
                    <inputColumn
                      refId="Package\Load Dim Product\Load Product Data.Inputs[Input 0].Columns[CategoryID]"
                      cachedDataType="i4"
                      cachedName="CategoryID"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[CategoryID]" />
                    <inputColumn
                      refId="Package\Load Dim Product\Load Product Data.Inputs[Input 0].Columns[UnitPrice]"
                      cachedDataType="cy"
                      cachedName="UnitPrice"
                      lineageId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output].Columns[UnitPrice]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Dim Product\Load Product Data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load Dim Product\Load Product Data.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Dim Product.Paths[OLE DB Source Output]"
              endId="Package\Load Dim Product\Load Product Data.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Load Dim Product\Get Product.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Dim Shippers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{407721f4-dfd8-498d-b4c4-fc251eb6b508}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Dim Shippers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Dim Shippers\Get Shippers"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get Shippers"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Shippers]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Dim Shippers\Get Shippers.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost\SQLEXPRESS.Northwind]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost\SQLEXPRESS.Northwind]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output].Columns[CompanyName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output].ExternalColumns[CompanyName]"
                      length="40"
                      lineageId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output].Columns[CompanyName]"
                      name="CompanyName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output].Columns[ShipperID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output].ExternalColumns[ShipperID]"
                      lineageId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output].Columns[ShipperID]"
                      name="ShipperID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output].ExternalColumns[CompanyName]"
                      dataType="wstr"
                      length="40"
                      name="CompanyName" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output].ExternalColumns[Phone]"
                      dataType="wstr"
                      length="24"
                      name="Phone" />
                    <externalMetadataColumn
                      refId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output].ExternalColumns[ShipperID]"
                      dataType="i4"
                      name="ShipperID" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Error Output].Columns[ShipperID]"
                      dataType="i4"
                      lineageId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Error Output].Columns[ShipperID]"
                      name="ShipperID" />
                    <outputColumn
                      refId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Error Output].Columns[CompanyName]"
                      dataType="wstr"
                      length="40"
                      lineageId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Error Output].Columns[CompanyName]"
                      name="CompanyName" />
                    <outputColumn
                      refId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Dim Shippers\Load Shippers Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Shippers Data"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="42">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\OperationResult.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[namespace SC_8ebf501efa24482da599bb7cfae07708.Models
{
    public class OperationResult
    {
        public bool succedd { get; set; }
        public string Message { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Settings.get_Default():SC_8ebf501efa24482da599bb7cfae07708.Properties.Sett" +
    "ings")]

namespace SC_8ebf501efa24482da599bb7cfae07708.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_8ebf501efa24482da599bb7cfae07708</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_8ebf501efa24482da599bb7cfae07708</msb:DisplayName>
    <msb:ProjectId>{3E1E14B9-DA7E-49F5-B3C8-74FA677BF363}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_8ebf501efa24482da599bb7cfae07708.csproj" />
    <msb:File Include="DataServices\DataServiceCustomer.cs" />
    <msb:File Include="Models\CustomerModel.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="DataServices\IDataServiceCustomer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Models\OperationResult.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8ebf501efa24482da599bb7cfae07708")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8ebf501efa24482da599bb7cfae07708")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String Constring
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Constring"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8ebf501efa24482da599bb7cfae07708.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8ebf501efa24482da599bb7cfae07708.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String CompanyName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool CompanyName_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ShipperID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ShipperID_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Threading.Tasks;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        LoadShippers(Row.ShipperID, Row.CompanyName).GetAwaiter();
    }

    public async Task LoadShippers(int shipperId, string companyName)
    {
        try
        {
            using (SqlConnection connection = new SqlConnection("Server=localhost\\SQLEXPRESS;Database=DWHNorthwindOrders;Trusted_Connection=true;TrustServerCertificate=true;"))
            {
                using (SqlCommand command = new SqlCommand("DWH.LoadDimShipper", connection))
                {
                    command.CommandType = CommandType.StoredProcedure;
                    command.Parameters.AddWithValue("ShipperID", shipperId);
                    command.Parameters.AddWithValue("CompanyName", companyName);

                    await connection.OpenAsync();
                    await command.ExecuteNonQueryAsync();
                }
            }
        }
        catch (Exception e)
        {
            MessageBox.Show(e.Message);
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[DataServices\DataServiceCustomer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using SC_8ebf501efa24482da599bb7cfae07708.Models;
using System;
using System.Collections.Generic;
using System.Data.Common;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.DataServices
{
    public class DataServiceCustomer : IDataServiceCustomer
    {
        private readonly string connectionString;
        public DataServiceCustomer()
        {
            connectionString = "Server=LAPTOP-0H8B2SAT\\SQLEXPRESS;Database=DWHNorthwind;Trusted_Connection=true;TrustServerCertificate=true";
        }
        public async Task<OperationResult> loadCustomer(CustomerModel customer)
        {
            OperationResult result = new OperationResult();
            try
            {

            }
            catch(Exception ex)
            {
                result.succedd = false;
                result.Message = $"error procesando los clientes {ex.Message}";
            }

            return result;
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Models\CustomerModel.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.Models
{
    public class CustomerModel
    {
        public int CustomerId { get; set; }
        public string CustomerName { get; set; }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[DataServices\IDataServiceCustomer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using SC_8ebf501efa24482da599bb7cfae07708.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_8ebf501efa24482da599bb7cfae07708.DataServices
{
    public interface IDataServiceCustomer
    {
        Task<OperationResult> loadCustomer(CustomerModel customer);
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8ebf501efa24482da599bb7cfae07708.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A2CADD09-E07C-4DDA-BE97-03D4AF5ACD02}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8ebf501efa24482da599bb7cfae07708</RootNamespace>
    <AssemblyName>SC_8ebf501efa24482da599bb7cfae07708</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="DataServices\DataServiceCustomer.cs" />
    <Compile Include="DataServices\IDataServiceCustomer.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Models\CustomerModel.cs" />
    <Compile Include="Models\OperationResult.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8ebf501efa24482da599bb7cfae07708.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
CwIf/n0VAAAEAnwWAAAEByhEAAAK3hQCH/59FQAABAJ8FgAABAYoRQAACioBEAAAAAAAAAgIABcW
AAABNgJ8FgAABAMoRgAACioAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAACAK
AAAjfgAAjAoAAIQLAAAjU3RyaW5ncwAAAAAQFgAAoAIAACNVUwCwGAAAEAAAACNHVUlEAAAAwBgA
AGADAAAjQmxvYgAAAAAAAAACAAABVxeiCwkLAAAA+gEzABYAAAEAAAA4AAAADgAAABYAAAArAAAA
FwAAAAMAAABGAAAAIgAAAAQAAAAGAAAADAAAABEAAAAEAAAAAwAAAAEAAAAHAAAAAQAAAAIAAAAE
AAAAAAAIBgEAAAAAAAYAvASSCAYAUAWSCAYA1QNOCA8ABgkAAAYAAgStBgYAnwStBgYAgAStBgYA
NwWtBgYA3AStBgYA9QStBgYANAStBgYATwSYBQoAEAXzAgYAKQNlBgYAGQSSCAYA3wWICQYAnQOS
CAYAJANlBgYAwwKSCAYAKgiSCAYAYQCSCAYA9AZlBgYAaQeSCA4A4wZeCg4AGAJeCgYAaAROCAoA
qQfzAhIAmgfzAgoALgfzAgoAkgrzAgYADgplBgYAuANOCAYAugeyCAYAIgeYBhYAfQPyBRYA6QPy
BRYAVgODBgYAQQCICQYASACSCAYAxgVlBgYAEQdlBhoAEQD1BxoAAQD1B3sAFwsAABoAIgD1BwYA
VwJlBgYAegutBg4ADgL+Bg4AGAMHAQ4AvwZeCgYAcgBlBg4AHQheCg4A1gb+BgYASwJlBh4AawvR
CR4ALQrRCQAAAADoAAAAAAABAAEAAQAQAHgGAAAQAAEAAQABABAAjQcAAG0AAQAGAAEAEAB0CgAA
eQABAA0AAQAQAOYJAAB9AAMAEQABABAAUAkAAH0ABAASAAAAEAC5CBUJfQAFABQAAAEQAH8JFQmV
AAcAGAABABAA5AWmCX0ACAAbAAEAEAA6CqYJfQAKACAAAQAQANgHYQh9AAwAJQChABAA1wdhCAAA
DQAnAAMBEACxAAAASQANACgAAwEQAIkAAABJABUAKgAGAOYJawEGAFAJbwEBAIIKcwEBAIIKcwER
AGwGdwERAEYDfAERACMCgQEBAKIBhQEBAPABiAEBAL4BiwEBANcBiAEhALIFiAEGAJIDhQEGAIAH
jgEGAFkBhQEGALcCiAEBAHgAkgEBAKMAlgEBADoAmgEBAJwAngEGAJIDhQEGAIAHpQFQIAAAAADG
AG4FBgABAFggAAAAAMYAeQUGAAEAYCAAAAAAxgBHC64BAQB8IAAAAACGAPIJtAECAMcgAAAAAIYY
QQgGAAQAzyAAAAAAhhhBCEkABADaIAAAAACGCKcCOwEHAO8gAAAAAIYIRQZqAAcA+CAAAAAAhgjx
ALsBBwANIQAAAACGCDAGagAHABYhAAAAAIYAXgtqAAcAHiEAAAAAhgAVCmoABwAmIQAAAACGGEEI
BgAHAEYhAAAAAMYA7Qq/AQcAayEAAAAAxgHmCq4BCwB+IQAAAADGAUcLrgEMAIAhAAAAAIYYQQjJ
AQ0AjyEAAAAAhhhBCMkBDgCeIQAAAACGCM0FOwEPAMQhAAAAAIMYQQgGAA8AzCEAAAAAkwi2B88B
DwD4IQAAAACTCC4D1QEPAP8hAAAAAJMIOgPbAQ8AByIAAAAAlgghCuIBEAAOIgAAAACGGEEIBgAQ
ABYiAAAAAJEYRwjnARAAIiIAAAAAhgg7AbsBEAAqIgAAAACGCEoBAQAQADMiAAAAAIYIewI7AREA
OyIAAAAAhgiMAhAAEQDEIQAAAACGGEEIBgASAEQiAAAAAIYIYwFqABIATCIAAAAAhghvAesBEgBV
IgAAAACGCDMCOwETAF0iAAAAAIYIPwIQABMAxCEAAAAAhhhBCAYAFABmIgAAAACGGEEIBgAUAHwi
AAAAAOYBygfwARQAAAAAAAAAxgXKB/ABFQC4IgAAAADhAfoKBgAWAPwkAAAAAOEB1gIbABYADCUA
AAAA4QH6CgYAFwBcJQAAAADhAdYCGwAXAAAAAQBiCwAAAQBZAQAAAgC3AgAAAQCvBwAAAgBaCQAA
AwA8BwAAAQD/AAAAAgCdAgAAAwCvBwAABAA8BwAAAQCvBwAAAQBiCwAAAQCYCgAAAQCYCgAAAQCS
BQAAAQCSBQAAAQCSBQAAAQCSBQAAAQCSBQAAAQDsBwAAAQDsBwAAAQDmAgAAAQDmAgsAMAANAE0A
DgBNAAkAQQgBABEAQQgGABkAQQgKACkAQQgQADEAQQgQADkAQQgQAEEAQQgQAEkAQQgQAFEAQQgQ
AFkAQQgQAGEAQQgQAGkAQQgGAHkAQQgVAIkAQQgGAJkA+goGAJkA1gIbANEAQQgGAAEBQQgGACEB
QQghAPEAbgUGAPEAeQUGAIEANggoALkAdgMyALkAvwo3ALkA2wVEANkAQQhJANkArwdTANkAWglX
AOEAwwVbANkAVQZgAOEAbwBlANkAXgtqANkAFQpqAPEAQQgGAEEBnwluAPEAbgl2APkAQQgGAPEA
RAl8AFEBXAaCAPEAMguJAFkBAwuPAHEAaQKWAHEAdgueAAkBQQikACkBQQgGAAwAdgO5AAwAvwo3
AAwA2wXIAMEAQQgQAMkAQQjfAIEBFAPmAMkA/wntAJEBhQXzAKkBHAFEAKEAkgFqALkAewH7AKEA
SgoGAIEBJgENARQANggdARwAkgFqABwASgo2AbEBbgMGALEAMwI7AbkBZgs/AbkA8QZGAbkAVAoG
ALkA1gIbAAwA8QZGAQwAVApTAQwA1gIbAC4ACwAZAi4AEwAiAi4AGwBBAi4AIwBKAi4AKwBzAi4A
MwBzAi4AOwBzAi4AQwBKAi4ASwB5Ai4AUwBzAi4AWwCQAkMAYwD9AoAAawDaAskAmwBBAuEAcwD9
AuMAkwD9AukAmwBBAgEBcwD9AiEBcwD9AkEBcwD9AmEBcwD9AqMBcwD9AsMBcwD9AmADcwD9AoAD
cwD9AqADcwD9AsADcwD9AgAEcwD9AiAEcwD9AkAEcwD9AmAEcwD9AsAEawACAyAFiwD9AmAFiwD9
Ai0ArADSAEwBAwABAAYABQAHAAYACAAIAAkACQAKAAsAAACrAvwBAABJBgACAAD1AAQCAAA0BgAC
AADRBfwBAAC6BwgCAABOAw4CAAAlChQCAABOAQQCAACQAvwBAABzAQACAABDAvwBAgAHAAMAAgAI
AAUAAgAJAAcAAgAKAAkAAgATAAsAAgAVAA0AAgAWAA8AAQAXAA8AAgAYABEAAgAbABMAAQAcABMA
AgAdABUAAQAeABUAAgAgABcAAQAhABcAAgAiABkAAQAjABkADQBQAB8ADQBSACEADgBUAB8ADgBW
ACEAsQAWASYBBIAAAAEAAAAAAAAAAAAAAAAAxAAAAAQAAAAAAAAAAAAAAFkBEwEAAAAAEAAAAAAA
AAAAAAAAYgGiCgAAAAAEAAAAAAAAAAAAAABZAQcBAAAAABAAAAAAAAAAAAAAAGIBxQoAAAAABAAA
AAAAAAAAAAAAWQFlBgAAAAAQAAAAAAAAAAAAAABiAUYHAAAAAAQAAAAAAAAAAAAAAFkB0QkAAAAA
AAAAAAEAAADDCAAADQACAA4ACwAxAD8AXwDDAHEABgFxACwBAAAAAABJRFRTVmFyaWFibGUxMDAA
SURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMAA8PnVfXzEAVGFza2AxAEFz
eW5jVGFza01ldGhvZEJ1aWxkZXJgMQBUYXNrQXdhaXRlcmAxAEdldEludDMyADxjb25uZWN0aW9u
PjVfXzIAPGxvYWRDdXN0b21lcj5kX18yADw+dV9fMgA8Y29tbWFuZD41X18zADxMb2FkU2hpcHBl
cnM+ZF9fMwBTQ184ZWJmNTAxZWZhMjQ0ODJkYTU5OWJiN2NmYWUwNzcwOAA8TW9kdWxlPgBnZXRf
U2hpcHBlcklEAElucHV0SUQAU3lzdGVtLkRhdGEAbXNjb3JsaWIAT3BlbkFzeW5jAEV4ZWN1dGVO
b25RdWVyeUFzeW5jAGdldF9DdXN0b21lcklkAHNldF9DdXN0b21lcklkAHNoaXBwZXJJZABnZXRf
c3VjY2VkZABzZXRfc3VjY2VkZABBd2FpdFVuc2FmZU9uQ29tcGxldGVkAGdldF9Jc0NvbXBsZXRl
ZAA8Q3VzdG9tZXJJZD5rX19CYWNraW5nRmllbGQAPHN1Y2NlZGQ+a19fQmFja2luZ0ZpZWxkADxN
ZXNzYWdlPmtfX0JhY2tpbmdGaWVsZAA8Q3VzdG9tZXJOYW1lPmtfX0JhY2tpbmdGaWVsZABEYkNv
bW1hbmQAU3FsQ29tbWFuZABkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UAc2V0X01lc3NhZ2UA
SURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X0N1c3Rv
bWVyTmFtZQBzZXRfQ3VzdG9tZXJOYW1lAElucHV0TmFtZQBnZXRfQ29tcGFueU5hbWUAY29tcGFu
eU5hbWUASUFzeW5jU3RhdGVNYWNoaW5lAFNldFN0YXRlTWFjaGluZQBzdGF0ZU1hY2hpbmUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAc2V0X0NvbW1hbmRUeXBlAFZhbHVlVHlwZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UARGlzcG9zZQBDcmVhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAPD4xX19zdGF0ZQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVn
Z2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXN5bmNTdGF0ZU1hY2hpbmVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAGNvbm5lY3Rpb25TdHJpbmcAR2V0U3RyaW5nAGdldF9Db25zdHJpbmcA
Z2V0X1Rhc2sAQ3VzdG9tZXJNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfOGViZjUwMWVm
YTI0NDgyZGE1OTliYjdjZmFlMDc3MDguZGxsAGdldF9TaGlwcGVySURfSXNOdWxsAGdldF9Db21w
YW55TmFtZV9Jc051bGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lz
dGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24A
U3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBTZXRFeGNl
cHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0
cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABB
c3luY1Rhc2tNZXRob2RCdWlsZGVyADw+dF9fYnVpbGRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVC
dWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAbG9hZEN1c3RvbWVyAElEYXRh
U2VydmljZUN1c3RvbWVyAGN1c3RvbWVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUu
V3JhcHBlcgBTcWxQYXJhbWV0ZXIAVGFza0F3YWl0ZXIAR2V0QXdhaXRlcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFNDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3NzA4LkRh
dGFTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU0NfOGViZjUwMWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDguUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2Zh
ZTA3NzA4LlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4
ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBTeXN0ZW0uVGhyZWFkaW5nLlRhc2tzAEVxdWFs
cwBTQ184ZWJmNTAxZWZhMjQ0ODJkYTU5OWJiN2NmYWUwNzcwOC5Nb2RlbHMAU3lzdGVtLldpbmRv
d3MuRm9ybXMAQ29ubmVjdGlvbnMATG9hZFNoaXBwZXJzAGdldF9QYXJhbWV0ZXJzAE9iamVjdABF
bmRPZlJvd3NldABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAT3BlcmF0aW9uUmVzdWx0AEdldFJl
c3VsdABTZXRSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50
Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AFN0
YXJ0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQA
TW92ZU5leHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABn
ZXRfRXZhbHVhdG9yQ29udGV4dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAU2hvdwBN
ZXNzYWdlQm94AGdldF9Bc3NlbWJseQAAAA9JAG4AcAB1AHQAIAAwAAATQwBvAG4AcwB0AHIAaQBu
AGcAAHFTAEMAXwA4AGUAYgBmADUAMAAxAGUAZgBhADIANAA0ADgAMgBkAGEANQA5ADkAYgBiADcA
YwBmAGEAZQAwADcANwAwADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAIDXUwBlAHIAdgBlAHIAPQBMAEEAUABUAE8AUAAtADAASAA4AEIAMgBTAEEAVABcAFMAUQBM
AEUAWABQAFIARQBTAFMAOwBEAGEAdABhAGIAYQBzAGUAPQBEAFcASABOAG8AcgB0AGgAdwBpAG4A
ZAA7AFQAcgB1AHMAdABlAGQAXwBDAG8AbgBuAGUAYwB0AGkAbwBuAD0AdAByAHUAZQA7AFQAcgB1
AHMAdABTAGUAcgB2AGUAcgBDAGUAcgB0AGkAZgBpAGMAYQB0AGUAPQB0AHIAdQBlAAGA2VMAZQBy
AHYAZQByAD0AbABvAGMAYQBsAGgAbwBzAHQAXABTAFEATABFAFgAUABSAEUAUwBTADsARABhAHQA
YQBiAGEAcwBlAD0ARABXAEgATgBvAHIAdABoAHcAaQBuAGQATwByAGQAZQByAHMAOwBUAHIAdQBz
AHQAZQBkAF8AQwBvAG4AbgBlAGMAdABpAG8AbgA9AHQAcgB1AGUAOwBUAHIAdQBzAHQAUwBlAHIA
dgBlAHIAQwBlAHIAdABpAGYAaQBjAGEAdABlAD0AdAByAHUAZQA7AAAlRABXAEgALgBMAG8AYQBk
AEQAaQBtAFMAaABpAHAAcABlAHIAABNTAGgAaQBwAHAAZQByAEkARAAAF0MAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAA4B5Op4wtdUOU4c52xHldCQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQESOQUg
AQESTQYgAQERgI0EIAARUQQHARE0BAAAEV0HMAEBARAeAAQKARE0BCAAEkEJIAMBEnEdCBJ1AwYS
cQMGHQgEIAEOCAQgAQIIBCABCAgDIAACByACAg4RgKUFIAEdCAgFIAASgKkGIAESgK0cBQAAEoCx
BiABHBKAtQcAARI5EYC5BSAAEoC9ByACAQ4SgL0EBwEROAcVEYCdARIoCQAAFRGAnQETAAQKARE4
CSAAFRKAmQETAAwHBAgRURURVQEIElkGIAIBDhJhBiABARGAxQUgABKAyQcgAhKA0Q4cCjACAgEQ
HgAQHgEGCgIRURE0CCAAFRKAmQEIBhUSgJkBCAggABURVQETAAUVEVUBCAkKAhURVQEIETQEIAAT
AAMgAA4GAAERgOEOBSABARJZBgcCEigSWQUgAQETAAi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIY
AwYSeQQGEoCFBAYSgIkDBhIgAgYIAgYOAgYCAwYRXQMGEmEDBhJlAwYRUQYGFRFVAQgIBhURgJ0B
EigFIAEBEgwGIAISQQgOAyAACAkgBAEIDhJxEnUFIAEBEnkFAAASgIUFAAASgIkGAAEBEoCJBAAA
EiADAAABBCABAQILIAEVEoCZARIoEiQDKAAOAygAAgMoAAgFCAASgIUFCAASgIkECAASIAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfOGViZjUw
MWVmYTI0NDgyZGE1OTliYjdjZmFlMDc3MDgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNQAA
SQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIu
TkVUIEZyYW1ld29yayA0LjciAQAdU2NyaXB0TWFpbis8TG9hZFNoaXBwZXJzPmRfXzMAAAQBAAAA
XAEAV1NDXzhlYmY1MDFlZmEyNDQ4MmRhNTk5YmI3Y2ZhZTA3NzA4LkRhdGFTZXJ2aWNlcy5EYXRh
U2VydmljZUN1c3RvbWVyKzxsb2FkQ3VzdG9tZXI+ZF9fMgAAALQAAADOyu++AQAAAJEAAABsU3lz
dGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5S
ZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABsQgAAAAAA
AAAAAACGQgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeEIAAAAAAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
OABlAGIAZgA1ADAAMQBlAGYAYQAyADQANAA4ADIAZABhADUAOQA5AGIAYgA3AGMAZgBhAGUAMAA3
ADcAMAA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA4AGUAYgBmADUAMAAxAGUAZgBh
ADIANAA0ADgAMgBkAGEANQA5ADkAYgBiADcAYwBmAGEAZQAwADcANwAwADgALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADgAZQBiAGYANQAw
ADEAZQBmAGEAMgA0ADQAOAAyAGQAYQA1ADkAOQBiAGIANwBjAGYAYQBlADAANwA3ADAAOAAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA4AGUAYgBmADUAMAAx
AGUAZgBhADIANAA0ADgAMgBkAGEANQA5ADkAYgBiADcAYwBmAGEAZQAwADcANwAwADgAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAJgyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8ebf501efa24482da599bb7cfae07708</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::Constring</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">7D</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Dim Shippers\Load Shippers Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Dim Shippers\Load Shippers Data.Inputs[Input 0].Columns[CompanyName]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="CompanyName"
                      lineageId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output].Columns[CompanyName]" />
                    <inputColumn
                      refId="Package\Load Dim Shippers\Load Shippers Data.Inputs[Input 0].Columns[ShipperID]"
                      cachedDataType="i4"
                      cachedName="ShipperID"
                      lineageId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output].Columns[ShipperID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Dim Shippers\Load Shippers Data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load Dim Shippers\Load Shippers Data.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Dim Shippers.Paths[OLE DB Source Output]"
              endId="Package\Load Dim Shippers\Load Shippers Data.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Load Dim Shippers\Get Shippers.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{FF52EFCE-8328-4871-AB42-222A5CB4DA5F}"
      DTS:From="Package\Load Dim Customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load Dim Employees" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{5ED81CDD-508A-45DC-ADBC-25E80AF22F3B}"
      DTS:From="Package\Load Dim Employees"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load Dim Shippers" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{7AA92D5C-4E0D-44EF-ADA8-0B2C6A94C11D}"
      DTS:From="Package\Load Dim Shippers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Load Dim Category" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{25B9AAC4-D18A-4B52-B55C-1E3F6AD2A7A9}"
      DTS:From="Package\Load Dim Category"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Load Dim Product" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="172,42.4"
          Id="Package\Load Dim Category"
          TopLeft="100.613631921849,336.800445957016" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\Load Dim Customers"
          TopLeft="100.624995427206,84.2491220669031" />
        <NodeLayout
          Size="176.8,41.6"
          Id="Package\Load Dim Employees"
          TopLeft="98.8636344264847,165.948005079611" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Load Dim Product"
          TopLeft="100.928025930989,427.912870332124" />
        <NodeLayout
          Size="166.4,41.6"
          Id="Package\Load Dim Shippers"
          TopLeft="103.420452402792,250.704528343926" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="187.944314926845,125.849122066903">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.0988830127076"
              Start="0,0"
              End="0,32.5988830127076">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5988830127076" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="186.942043414638,207.548005079611">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.1565232643152"
              Start="0,0"
              End="0,35.6565232643152">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.6565232643152" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="186.61704216232,292.304528343926">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.4959176130902"
              Start="0,0"
              End="0,36.9959176130902">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.9959176130902" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="184.170828926419,379.200445957016">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.7124243751081"
              Start="0,0"
              End="0,41.2124243751081">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.2124243751081" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load Dim Category">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="140,41.6"
          Id="Package\Load Dim Category\Get Category"
          TopLeft="31.6666620969772,48.2719292742848" />
        <NodeLayout
          Size="191.2,52.8"
          Id="Package\Load Dim Category\Load Category Data"
          TopLeft="356.916656944901,44.9035087252794" />
        <EdgeLayout
          Id="Package\Load Dim Category.Paths[OLE DB Source Output]"
          TopLeft="171.666662096977,70.1877189997821">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="185.249994847923,0"
              Start="0,0"
              End="177.749994847923,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="177.749994847923,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Dim Category\Get Category">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load Dim Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="148,41.6"
          Id="Package\Load Dim Customers\Get Customers"
          TopLeft="152.499993033707,128.905262087965" />
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\Load Dim Customers\Load Customers Data"
          TopLeft="376.583315536794,131.870173882525" />
        <EdgeLayout
          Id="Package\Load Dim Customers.Paths[OLE DB Source Output]"
          TopLeft="300.499993033707,151.187717985245">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="76.0833225030872,0"
              Start="0,0"
              End="68.5833225030872,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="68.5833225030872,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Dim Customers\Get Customers">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load Dim Employees">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="190.4,60"
          Id="Package\Load Dim Employees\Get Employees"
          TopLeft="128.499993987381,129.105261403108" />
        <NodeLayout
          Size="192,53.6"
          Id="Package\Load Dim Employees\Load Employees Data"
          TopLeft="400.749989625067,129.736840794498" />
        <EdgeLayout
          Id="Package\Load Dim Employees.Paths[OLE DB Source Output]"
          TopLeft="318.899993987381,157.821051098803">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="81.8499956376851,0"
              Start="0,0"
              End="74.3499956376851,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="74.3499956376851,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Dim Employees\Get Employees">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load Dim Product">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Load Dim Product\Load Product Data"
          TopLeft="324.083324100822,33.736842225009" />
        <NodeLayout
          Size="168.8,48.8"
          Id="Package\Load Dim Product\Get Product"
          TopLeft="23.8333288803695,31.1052628634213" />
        <EdgeLayout
          Id="Package\Load Dim Product.Paths[OLE DB Source Output]"
          TopLeft="192.63332888037,55.0210525442152">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="131.449995220453,0"
              Start="0,0"
              End="123.949995220453,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="123.949995220453,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Dim Product\Get Product">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load Dim Shippers">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="178.4,53.6"
          Id="Package\Load Dim Shippers\Load Shippers Data"
          TopLeft="381.749989908188,38.5939850097748" />
        <NodeLayout
          Size="158.4,54.4"
          Id="Package\Load Dim Shippers\Get Shippers"
          TopLeft="59.4999950155616,40.9624055736813" />
        <EdgeLayout
          Id="Package\Load Dim Shippers.Paths[OLE DB Source Output]"
          TopLeft="217.899995015561,66.7781952917281">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="163.849994892627,0"
              Start="0,0"
              End="156.349994892627,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="156.349994892627,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Dim Shippers\Get Shippers">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>